{
    "swagger": "2.0",
    "info": {
        "description": "Pricing Api documentation",
        "version": "4.12.1",
        "title": "ЦО ТС5"
    },
    "host": "back-release.k8s.pricing-dev-3.salt.x5.ru",
    "basePath": "/",
    "tags": [
        {
            "name": "АСУД",
            "description": "Asud Users Controller"
        },
        {
            "name": "Авторизация",
            "description": "User JWT Controller"
        },
        {
            "name": "Батч",
            "description": "Batch Controller"
        },
        {
            "name": "Вкладка Мастер настройки для бизнес правила Индекс конкурента",
            "description": "Competitor Index Master Setting Controller"
        },
        {
            "name": "Вкладка данные для бизнес правила Индекс конкурента",
            "description": "Competitor Index Variant Controller"
        },
        {
            "name": "История нового мониторинга",
            "description": "Monitoring History Controller"
        },
        {
            "name": "Как получилась цена",
            "description": "Pricing Report Controller"
        },
        {
            "name": "Карточки бизнес-правил",
            "description": "Card Controller"
        },
        {
            "name": "Конструктор бизнес-правил",
            "description": "Business Rule Controller"
        },
        {
            "name": "Новый мониторинг",
            "description": "Monitoring Controller"
        },
        {
            "name": "Округление и интервалы для цены",
            "description": "Pricing Constraints Controller"
        },
        {
            "name": "Потребности",
            "description": "Demand Controller"
        },
        {
            "name": "Проверка цен ЦО",
            "description": "Checking Prices Controller"
        },
        {
            "name": "Просмотр журнала изменений бизнес правил",
            "description": "Business Rule Change Log Controller"
        },
        {
            "name": "Работа с логгерами",
            "description": "Logs Manager Controller"
        },
        {
            "name": "Работа с отчётами",
            "description": "Report Controller"
        },
        {
            "name": "Работа с пользователем",
            "description": "User Controller"
        },
        {
            "name": "Рассчитанные цены",
            "description": "Calculated Prices Controller"
        },
        {
            "name": "Расчёт показателей KPI",
            "description": "Kpi Parameters Controller"
        },
        {
            "name": "СТМ",
            "description": "Stm Controller"
        },
        {
            "name": "СУЦО",
            "description": "Suco Controller"
        },
        {
            "name": "Сегментация",
            "description": "Segmentation Controller"
        },
        {
            "name": "Сервис уведомлений",
            "description": "Notification Controller"
        },
        {
            "name": "Справочники",
            "description": "Dictionaries Controller"
        },
        {
            "name": "Управление кэшами",
            "description": "Cache Manager Controller"
        },
        {
            "name": "Ценовые лестницы",
            "description": "Price Ladders Controller"
        },
        {
            "name": "Шаблоны",
            "description": "Sort Template Controller"
        }
    ],
    "paths": {
        "/api/analogue/adjust-deviation-from-stm": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Установить пользовательское отклонение от СТМ для аналога",
                "operationId": "adjustDeviationFromStmUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на установку пользовательского отклонения от СТМ для аналога"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/analogue/collector/find-all": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Получение аналогов СТМ с применением коллектора фильтров",
                "operationId": "findStmUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "stmId",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«Линейка аналог СТМ»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/analogue/collector/values": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Получение значений аналогов СТМ для коллектора фильтров",
                "operationId": "findValuesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stmId",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/analogue/comment": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Добавить комментарий к аналогу",
                "operationId": "addCommentToAnalogueUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на добавление комментария к аналогу"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/change-user": {
            "put": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Изменение данных пользования",
                "operationId": "changeUserUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userModifyAssud",
                        "description": "userModifyAssud",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserModifyAssud"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/create-user": {
            "put": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Создание пользования",
                "operationId": "createUserUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userCreateAssud",
                        "description": "userCreateAssud",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateAssud"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/get-fincodes": {
            "get": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Получить справочник финкодов",
                "operationId": "getFincodesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FinCodeDictAssud"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/get-roles": {
            "get": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Получить справочник ролей",
                "operationId": "getRolesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleDictAssud"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/get-territories": {
            "get": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Получить справочник территорий",
                "operationId": "getTerritoriesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TerritoryDictAssud"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/get-users-with-roles": {
            "get": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Получить справочник сотрудников с ролями",
                "operationId": "getUsersWithRolesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserWithRole"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/get-users-without-roles": {
            "get": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Получить справочник сотрудников без ролей",
                "operationId": "getUsersWithoutRolesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserWithoutRole"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/asud/manage-user-role": {
            "post": {
                "tags": [
                    "АСУД"
                ],
                "summary": "Добавить или удалить роль пользователя",
                "operationId": "manageUserRoleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "roleChangeDto",
                        "description": "roleChangeDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RoleChangeDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/authenticate": {
            "get": {
                "tags": [
                    "Авторизация"
                ],
                "summary": "Проверяет аутентифицирован ли пользователь и возвращает DTO пользователя",
                "operationId": "isAuthenticatedUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Авторизация"
                ],
                "summary": "Метод авторизации",
                "operationId": "authorizeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "loginVM",
                        "description": "loginVM",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginVM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/batch/demand/start": {
            "get": {
                "tags": [
                    "Батч"
                ],
                "summary": "Запуск задачи обновления продуктов потребностей",
                "operationId": "startDemandBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/batch/info": {
            "get": {
                "tags": [
                    "Батч"
                ],
                "summary": "Получить статус выполнения задачи",
                "operationId": "infoBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobStatusDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/batch/ladders/cart/start": {
            "get": {
                "tags": [
                    "Батч"
                ],
                "summary": "Запуск задачи обновления корзины ценовых лестниц",
                "operationId": "startCartBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/batch/ladders/start": {
            "get": {
                "tags": [
                    "Батч"
                ],
                "summary": "Запуск задачи обновления ценовых лестниц",
                "operationId": "startLaddersBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/batch/stm/edlp/start": {
            "get": {
                "tags": [
                    "Батч"
                ],
                "summary": "Запуск задачи по очистке и связке линеек СТМ EDLP - аналогов",
                "operationId": "startStmEdlpBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/change-log/collector/find-all": {
            "post": {
                "tags": [
                    "Просмотр журнала изменений бизнес правил"
                ],
                "summary": "Получение списка изменений бизнес правил с примененными фильтрами",
                "operationId": "findAllMatchingBusinessRulesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«BusinessRuleChangeLogDto»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/change-log/collector/values": {
            "post": {
                "tags": [
                    "Просмотр журнала изменений бизнес правил"
                ],
                "summary": "Получение значений полей логов бизнес правил для коллектора фильтров",
                "operationId": "findValuesUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/collector/find-all": {
            "post": {
                "tags": [
                    "Конструктор бизнес-правил"
                ],
                "summary": "Получение списка бизнес правил с примененными фильтрами",
                "operationId": "findAllMatchingBusinessRulesUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«BusinessRuleListResponseDto»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/collector/values": {
            "post": {
                "tags": [
                    "Конструктор бизнес-правил"
                ],
                "summary": "Получение значений полей бизнес правил для коллектора фильтров",
                "operationId": "findValuesUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/add-data": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Создание дополнительных строчек в таблице данных",
                "operationId": "addDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "addDataRequestDto",
                        "description": "addDataRequestDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexAddDataRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/apply-changes": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Применение изменений во вкладке данные для выбранной строчки",
                "operationId": "applyChangesUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "changedInfo",
                        "description": "changedInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexChangeDataRequestDto"
                        }
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexMasterSettingHintDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/check-new-competitor-name": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Проверка является ли комбинация полей с новым имененм уникальной",
                "operationId": "checkCompetitorNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorNameToCheck",
                        "in": "query",
                        "description": "competitorNameToCheck",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/category/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных в разрезе категории",
                "operationId": "findAllCompetitorIndexDataCategoryGroupedUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/category/get-grouped-by-category": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по категории в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByCategoryUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByCategoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/category/get-grouped-by-fin-code": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по фин коду в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByFinCodeUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByFinCodeDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/category/get-grouped-by-ui3": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по УИ3 в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByUi3UsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByUi3Dto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/category/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных данных в разрезе категории",
                "operationId": "findCategoryUngroupedCompetitorIndexDataUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "description": "ui3",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "description": "ui3Code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/geography/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGeographyGroupedUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/geography/get-grouped-by-macro": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по макро региону в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByMacroUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedByMacroRegionDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/geography/get-grouped-by-territory": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по територии в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByTerritoryUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedByTerritoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/find-all/geography/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных данных в разрезе географии",
                "operationId": "findGeographyUngroupedCompetitorIndexDataUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "description": "macroRegion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/collector/values": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение значений полей бизнес правил для коллектора фильтров",
                "operationId": "findValuesUsingPOST_6",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/count-empty-data": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение количетсва пустых строчек",
                "operationId": "getEmptyDataCounterUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/delete-data": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Удаление строчек в таблице данных",
                "operationId": "deleteDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/get-master-settings-hints": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение данных о мастер настройках для выделенной строчки",
                "operationId": "getMasterSettingHintsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexMasterSettingHintDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings-hints-check-name": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Проверка является ли комбинация полей с новым имененм уникальной",
                "operationId": "masterSettingCheckCompetitorNameUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorNameToCheck",
                        "in": "query",
                        "description": "competitorNameToCheck",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/apply-changes": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Применение изменений во вкладке мастер настройки для выбранной строчки",
                "operationId": "applyChangesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "changedInfo",
                        "description": "changedInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexChangeMasterSettingRequestDto"
                        }
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexMasterSettingHintDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/category/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек в разрезе категории",
                "operationId": "findAllCompetitorIndexDataCategoryGroupedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexMasterSettingCategoryGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/category/get-grouped-by-category": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек по категории в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByCategoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryMasterSettingGroupedByCategoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/category/get-grouped-by-fin-code": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек по фин коду в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByFinCodeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryMasterSettingGroupedByFinCodeDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/category/get-grouped-by-ui3": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек по УИ3 в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByUi3UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryMasterSettingGroupedByUi3Dto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/category/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных мастер настроек в разрезе категории",
                "operationId": "findCategoryUngroupedCompetitorIndexDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "description": "ui3",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "description": "ui3Code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexMasterSettingUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/geography/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGeographyGroupedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexMasterSettingGeographyGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/geography/get-grouped-by-macro": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек по макро региону в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByMacroUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyMasterSettingsGroupedByMacroRegionDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/geography/get-grouped-by-territory": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных мастер настроек по територии в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByTerritoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyMasterSettingsGroupedByTerritoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/find-all/geography/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных мастер настроек в разрезе географии",
                "operationId": "findGeographyUngroupedCompetitorIndexDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "description": "macroRegion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexMasterSettingUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/master-settings/collector/values": {
            "post": {
                "tags": [
                    "Вкладка Мастер настройки для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение значений полей бизнес правил для коллектора фильтров",
                "operationId": "findValuesUsingPOST_5",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/add-data": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Создание дополнительных строчек в таблице данных",
                "operationId": "addDataUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "addDataRequestDto",
                        "description": "addDataRequestDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexAddDataRequestDto"
                        }
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/apply-changes": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Применение изменений во вкладке данные для выбранной строчки",
                "operationId": "applyChangesUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "changedInfo",
                        "description": "changedInfo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexChangeDataRequestDto"
                        }
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CompetitorIndexMasterSettingHintDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/check-new-competitor-name": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Проверка является ли комбинация полей с новым имененм уникальной",
                "operationId": "checkCompetitorNameUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorNameToCheck",
                        "in": "query",
                        "description": "competitorNameToCheck",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/category/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных в разрезе категории",
                "operationId": "findAllCompetitorIndexDataCategoryGroupedUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/category/get-grouped-by-category": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по категории в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByCategoryUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByCategoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/category/get-grouped-by-fin-code": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по фин коду в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByFinCodeUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByFinCodeDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/category/get-grouped-by-ui3": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по УИ3 в разрезе категории",
                "operationId": "findAllCompetitorIndexDataGroupedByUi3UsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexCategoryDataGroupedByUi3Dto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/category/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных данных в разрезе категории",
                "operationId": "findCategoryUngroupedCompetitorIndexDataUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "description": "finCode",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "description": "goodsCategory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "description": "ui3",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "description": "ui3Code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/geography/get-all-grouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGeographyGroupedUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedAllDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/geography/get-grouped-by-macro": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по макро региону в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByMacroUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedByMacroRegionDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/geography/get-grouped-by-territory": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка сгруппированных данных по територии в разрезе географии",
                "operationId": "findAllCompetitorIndexDataGroupedByTerritoryUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexGeographyDataGroupedByTerritoryDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/find-all/geography/get-ungrouped": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение списка несгруппированных данных в разрезе географии",
                "operationId": "findGeographyUngroupedCompetitorIndexDataUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "description": "macroRegion",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "description": "territory",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompetitorIndexUngroupedDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/collector/values": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Получение значений полей бизнес правил для коллектора фильтров",
                "operationId": "findValuesUsingPOST_7",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/data/competitor-index/variants/delete-data": {
            "post": {
                "tags": [
                    "Вкладка данные для бизнес правила Индекс конкурента"
                ],
                "summary": "Удаление строчек в таблице данных",
                "operationId": "deleteDataUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "basketType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitorName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "finCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goodsCategory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "macroRegion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyEmptyData",
                        "in": "query",
                        "description": "onlyEmptyData",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "territory",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui3Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ui4Code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "variantId",
                        "in": "query",
                        "description": "variantId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/get/{id}": {
            "get": {
                "tags": [
                    "Конструктор бизнес-правил"
                ],
                "summary": "Получение бизнес правила по id",
                "operationId": "getBusinessRuleUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BusinessRuleDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/business-rule/switch-status": {
            "put": {
                "tags": [
                    "Конструктор бизнес-правил"
                ],
                "summary": "Деактивация бизнес правила по id",
                "operationId": "switchStatusUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "proposedStatus",
                        "in": "query",
                        "description": "proposedStatus",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BusinessRuleChangedStatusDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cache/clear/all": {
            "put": {
                "tags": [
                    "Управление кэшами"
                ],
                "summary": "Ручная очистка всех cache",
                "operationId": "clearAllCacheUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cache/clear/{cacheName}": {
            "put": {
                "tags": [
                    "Управление кэшами"
                ],
                "summary": "Ручная очистка cache по наименованию",
                "operationId": "clearCacheByNameUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "cacheName",
                        "in": "path",
                        "description": "cacheName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cache/evict/{cacheName}/{cacheKey}": {
            "put": {
                "tags": [
                    "Управление кэшами"
                ],
                "summary": "Ручное удаление определенного значения указанного cache",
                "operationId": "evictValueFromCacheUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "cacheKey",
                        "in": "path",
                        "description": "cacheKey",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cacheName",
                        "in": "path",
                        "description": "cacheName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cache/names": {
            "get": {
                "tags": [
                    "Управление кэшами"
                ],
                "summary": "Получение всех доступных наименований cache",
                "operationId": "getCacheNamesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cards/create": {
            "post": {
                "tags": [
                    "Карточки бизнес-правил"
                ],
                "summary": "Создание новой карточки",
                "operationId": "createUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cards/delete": {
            "delete": {
                "tags": [
                    "Карточки бизнес-правил"
                ],
                "summary": "Удаление карточки",
                "operationId": "deleteUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "query",
                        "description": "cardId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cards/find-all-for-current-user": {
            "get": {
                "tags": [
                    "Карточки бизнес-правил"
                ],
                "summary": "Получение всех карточек текущего пользователя",
                "operationId": "findAllForCurrentUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Card"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/cards/update": {
            "post": {
                "tags": [
                    "Карточки бизнес-правил"
                ],
                "summary": "Изменение карточки",
                "operationId": "updateUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CardUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/accept-km-price": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Подтверждение/отклонение цен",
                "operationId": "acceptKmPriceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "acceptKmPricesRequestDTO",
                        "description": "acceptKmPricesRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/apply-price": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Применение цены ЦО",
                "operationId": "applyPriceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "applyPriceRequestDTO",
                        "description": "applyPriceRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на применение цены ЦО"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/collector/find-all": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Получение верхних групп и подгрупп контроля цен с применением коллектора фильтров",
                "operationId": "findDoubleGroupUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«UpperGroupCheckingPricesDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/collector/values": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Получение значений таблицы контроля цен для коллектора фильтров",
                "operationId": "findValuesUsingPOST_4",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/confirm-prices": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Подтверждение/отклонение цен",
                "operationId": "confirmPricesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "acceptPricesRequestDTO",
                        "description": "acceptPricesRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/findChildren": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Получение цен из отдельной группы для проверки",
                "operationId": "findPricesFromGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "groupIds",
                        "description": "groupIds",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FlatCheckingPricesResponseDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/price-changes-export-to-excel": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Выгрузка данных с экрана 'Контроль ЦО' по изменению цен",
                "operationId": "priceChangesExportToExcelUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/price-for-monitoring-task-export-to-excel": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Выгрузка данных с экрана 'Контроль ЦО' для заданий на мониторинг",
                "operationId": "monitoringTasksExportToExcelUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/checking-prices/set-viewed": {
            "post": {
                "tags": [
                    "Проверка цен ЦО"
                ],
                "summary": "Установка флага Просмотрено",
                "operationId": "setViewedUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pricingViewedRequests",
                        "description": "pricingViewedRequests",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PricingViewedRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/create-test-user": {
            "post": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Создание тестового пользователя",
                "operationId": "createTestUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "testUserDTO",
                        "description": "testUserDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TestUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand": {
            "post": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Добавление потребностей",
                "operationId": "createDemandsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createDemandDTO",
                        "description": "createDemandDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDemandDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Удаление потребностей",
                "operationId": "deleteDemandsUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "deleteDemandDTO",
                        "description": "deleteDemandDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteDemandDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand/availableParams": {
            "get": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Получение списка ui4, доступных пользователю",
                "operationId": "getAvailableParamsUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/DictionaryDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand/collector/fetch-all": {
            "post": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Выгрузка рассчитанных потребностей",
                "operationId": "fetchAllUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand/collector/find-all": {
            "post": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Получение списка рассчитанных потребностей с применением коллектора фильтров",
                "operationId": "findAllUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«PluDemandDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand/collector/values": {
            "post": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Получение значений для коллектора фильтров",
                "operationId": "findValuesUsingPOST_8",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/demand/lastUpdate": {
            "get": {
                "tags": [
                    "Потребности"
                ],
                "summary": "Получение даты последнего обновления",
                "operationId": "getLastUpdateUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/accept-prices": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Принятие цен",
                "operationId": "acceptUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroupKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/apply-prices": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Изменение цены КМ",
                "operationId": "applyUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplyPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/bulk-sending-prices-to-approve": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Массовая отправка цен на согласование",
                "operationId": "bulkSendingPricesToApproveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDTO",
                        "description": "requestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на массовую отправку цен"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/changed-upper-groups": {
            "get": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Получения измененных верхних групп не отправленных на согласование",
                "operationId": "getChangedGroupsUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Измененные группы верхнего уровня экрана РЦ"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/changed-upper-groups/count": {
            "get": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Количество измененных верхних групп не отправленных на согласование",
                "operationId": "changedGroupsCountUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные об измененных группах на экране РЦ"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/collector/find-all": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Получение верхних групп и подгрупп рассчитанных цен с применением коллектора фильтров",
                "operationId": "findDoubleGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«UpperGroupCalculatedPricesDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/collector/values": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Получение значений для коллектора фильтров",
                "operationId": "findValuesUsingPOST_3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/decline-prices": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Отклонение цен",
                "operationId": "declineUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeclinePriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/export-to-excel": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Выгрузка данных по расчету цен",
                "operationId": "exportToExcelUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/findChildren": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Получение несгруппированных цен по групповому id",
                "operationId": "flatByGroupIdUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "groupIds",
                        "description": "groupIds",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FlatCalculatedPricesResponseDTO"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/detailed/set-viewed": {
            "post": {
                "tags": [
                    "Рассчитанные цены"
                ],
                "summary": "Просмотрено",
                "operationId": "setViewedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pricingViewedRequests",
                        "description": "pricingViewedRequests",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PricingViewedRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/category": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение ui справочников",
                "operationId": "allUiDictionaryUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/fincodes": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение справочника финкодов",
                "operationId": "fincodeDictUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "$ref": "#/definitions/FincodeDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/find-by-name": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение справочника по названию",
                "operationId": "findByNameUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "dict-name",
                        "in": "query",
                        "description": "dict-name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DictionaryDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-attribute-influence-price": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Заведения нового значения в словарь ladder_attribute_influence_price",
                "operationId": "createLadderAttributeInfluencePriceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderAttributeInfluencePriceCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-brand": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Заведения нового значения в словарь ladder_brand_dict",
                "operationId": "createLadderBrandUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderBrandCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-product-group": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Заведения нового значения в словарь ladder_product_group",
                "operationId": "createLadderProductGroupUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderProductGroupCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-product-type": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Заведения нового значения в словарь ladder_product_type",
                "operationId": "createLadderProductTypeUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderProductTypeCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-tara": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Заведения нового значения в словарь ladder_tara_dict",
                "operationId": "createLadderTaraUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderTaraCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ladder-ui4-joined": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Сохранение или изменение значений в словаре ladder_ui_4_joined_dict",
                "operationId": "saveLadderUi4JoinedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LadderUi4JoinedCreateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/macro-regions": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение справочника макрорегионов",
                "operationId": "macroRegionDictUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/roles": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение справочника ролей",
                "operationId": "roleModelDictUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/stm-ui4-parameters": {
            "post": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Сохранение или изменение значений в словаре stm_ui_4_parameters",
                "operationId": "saveStmUi4ParametersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на сохранение параметров СТМ для УИ 4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/dict/ui3-ui4-ui4code": {
            "get": {
                "tags": [
                    "Справочники"
                ],
                "summary": "Получение справочника Уи3 Уи4 Уи4Код",
                "operationId": "getUi3Ui4DictWithCodesUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ui3Ui4DescriptionCodesDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/filter-templates/delete/{id}": {
            "delete": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Удаление шаблона фильтров по идентификатору",
                "operationId": "deleteUsingDELETE_1",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/filter-templates/for-current-user": {
            "get": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Получение списка шаблонов фильтров для текущего пользователя",
                "operationId": "findForCurrentUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateResponseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/filter-templates/save": {
            "post": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Сохранение шаблона фильтров с параметрами",
                "operationId": "saveUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemplateResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/kpi-params/calculate-margin-and-fact-index": {
            "post": {
                "tags": [
                    "Расчёт показателей KPI"
                ],
                "summary": "Расчёт показателей маржи и фактического индекса",
                "operationId": "calculateMarginAndFactIndexUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/KpiParametersDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/batch/info": {
            "get": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получить статус выполнения задачи по ценовым лестницам",
                "operationId": "infoBatchUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JobStatusDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true
            }
        },
        "/api/ladder/batch/start": {
            "get": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Запуск задач ценовых лестниц",
                "operationId": "startBatchUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "deprecated": true
            }
        },
        "/api/ladder/collector/find-all": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение ценовых лестниц с применением коллектора фильтров",
                "operationId": "findLaddersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«PriceLaddersDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/collector/values": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение значений ценовых лестниц для коллектора фильтров",
                "operationId": "findValuesUsingPOST_11",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/export-to-excel": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Выгрузка данных по лестницам",
                "operationId": "exportToExcelUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/all-has-moscow-products": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Проверка наличия Московских товаров в продуктовой линейке во всех макро территории пользователя",
                "operationId": "checkMultiplePluLineForMoscowProductsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckPluLineHasMoscowProductsRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CheckMultipleMacroPluLineHasMoscowProductsResponseDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/all-price-limit": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение допустимого лимита цены продуктовой линейки для всех макро территории пользователя",
                "operationId": "checkAllOrderPriceForFederalOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderPriceLimitRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderPriceLimitAllMacroResponseDto"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/approve": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Согласования изменений продуктовых линеек",
                "operationId": "approveUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluDTOs",
                        "description": "pluDTOs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTOReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/change-monitoring-flag": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Изменить признак наличии мониторинга продуктовой линейки",
                "operationId": "changeMonitoringFlagUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluLineRequestDTO",
                        "description": "pluLineRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PluLineRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/dependant-products": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение списка товаров и их семей связанных изменениями для отображения пользователю",
                "operationId": "getDependantPluLinesProductsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "productsDto",
                        "description": "productsDto",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTOReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DependantPluLinesProductsDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/find": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Поиск продуктовой линейки",
                "operationId": "findPluLineUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PriceLaddersPluLineRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PluLineDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/has-moscow-products": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Проверка наличия Московских товаров в продуктовой линейки",
                "operationId": "checkPluLineForMoscowProductsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckPluLineHasMoscowProductsRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CheckPluLineHasMoscowProductsResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/order-price/restore-to-current-data": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Сброс предложенной цены продуктовой линейки до текущего значения",
                "operationId": "restoreOrderPriceToCurrentDataUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDTO",
                        "description": "requestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreDataRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/plu": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение всех продуктов продуктовой линейки по которым сейчас идет ценообразование и измененным кандидатам на добавление в линейку",
                "operationId": "getPluLineProductsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluLineRequestDTO",
                        "description": "pluLineRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PluLineRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPriceUpdateViewDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/plu-count": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение кол-ва товаров продуктовой линейки по которым сейчас идет ценообразование и измененным кандидатам на добавление в линейку",
                "operationId": "getPluLineProductsCountUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluLineRequestDTO",
                        "description": "pluLineRequestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PluLineRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PluLineProductsCountDTO"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/price-limit": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получение допустимого лимита цены продуктовой линейки",
                "operationId": "checkOrderPriceForFederalOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderPriceLimitRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPriceLimitResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/product-group/restore-to-current-data": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Сброс предложенной группы продуктовой линейки до текущего значения",
                "operationId": "restoreProductGroupToCurrentDataUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDTO",
                        "description": "requestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreDataRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/propose-order-price": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Предложение новой цены продуктовой линейки",
                "operationId": "proposeOrderPriceUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LineOrderPriceRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTORes"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/propose-product-group": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Предложить или удалить новую группу продукт для продуктовой линейки",
                "operationId": "editProductGroupUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LineProductGroupRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTORes"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/reject": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Отклонить изменения продуктовой линейки",
                "operationId": "rejectChangesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RejectChangesDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/revoke-from-approval": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Отзыв продуктовой линейки с согласования ЦО",
                "operationId": "revokeFromApprovalUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "selectedProducts",
                        "description": "selectedProducts",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTOReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu-line/send-to-approve": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Отправка продуктовых линеек на согласование ЦО",
                "operationId": "sendToApproveUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluDTOs",
                        "description": "pluDTOs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTOReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/accept": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Принять новые товары",
                "operationId": "acceptNewProductUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pluDTOs",
                        "description": "pluDTOs",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTOReq"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/change-plu-line": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Предложить новую продуктовую линейку",
                "operationId": "proposePluLineUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateProductsRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PluDTORes"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/find-all-allowable-ui4-joined": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получить возможные пользовательские УИ4 для продуктов во всех макро пользователя",
                "operationId": "findAllAllowableUi4JoinedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос для получения возможных пользовательских УИ4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PricePluLinesMacro"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/find-allowable-ui4-joined": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Получить возможные пользовательские УИ4 для продуктов",
                "operationId": "findAllowableUi4JoinedUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос для получения возможных пользовательских УИ4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Возможные пользовательские УИ4 для продуктов с подсказками"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/restore-to-current-data": {
            "put": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Сброс предложенных изменений продукта до текущих значений",
                "operationId": "restoreProductsToCurrentDataUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDTO",
                        "description": "requestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreDataRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/ladder/plu/restore-to-current-data/check": {
            "post": {
                "tags": [
                    "Ценовые лестницы"
                ],
                "summary": "Предзапрос на возможность сброса предложенных изменений продукта до текущих значений",
                "operationId": "validateRestoreProductsToCurrentDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDTO",
                        "description": "requestDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestoreDataCheckRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProductRestoreValidationResponse"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Авторизация"
                ],
                "summary": "Метод окончания сессии",
                "operationId": "logoutUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/logs": {
            "get": {
                "tags": [
                    "Работа с логгерами"
                ],
                "summary": "Получение полного списка логгеров",
                "operationId": "getListUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoggerVM"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Работа с логгерами"
                ],
                "summary": "Изменение уровня логирования",
                "operationId": "changeLevelUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "jsonLogger",
                        "description": "jsonLogger",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoggerVM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/collector/find-all": {
            "post": {
                "tags": [
                    "Новый мониторинг"
                ],
                "summary": "Получение сгруппированных мониторингов с применением коллектора фильтров",
                "operationId": "findGroupedMonitoringUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Slice«MonitoringGroupDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/collector/values": {
            "post": {
                "tags": [
                    "Новый мониторинг"
                ],
                "summary": "Получение значений сгруппированных мониторингов для коллектора фильтров",
                "operationId": "findValuesUsingPOST_9",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/count": {
            "post": {
                "tags": [
                    "Новый мониторинг"
                ],
                "summary": "Получение точного количества сгруппированных мониторингов с применением коллектора фильтров",
                "operationId": "countByFiltersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/group/update": {
            "post": {
                "tags": [
                    "Новый мониторинг"
                ],
                "summary": "Обновление групп мониторинга",
                "operationId": "updateUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "updateRequests",
                        "description": "updateRequests",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MonitoringUpdateRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/history/collector/find-all": {
            "post": {
                "tags": [
                    "История нового мониторинга"
                ],
                "summary": "Получение истории сгруппированных мониторингов с применением коллектора фильтров",
                "operationId": "findMonitoringHistoryUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Slice«MonitoringGroupDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/history/collector/values": {
            "post": {
                "tags": [
                    "История нового мониторинга"
                ],
                "summary": "Получение значений истории сгруппированных мониторингов для коллектора фильтров",
                "operationId": "findValuesUsingPOST_10",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/history/count": {
            "post": {
                "tags": [
                    "История нового мониторинга"
                ],
                "summary": "Получение точного количества историй сгруппированных мониторингов с применением коллектора фильтров",
                "operationId": "countByFiltersUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/new-monitoring/load": {
            "post": {
                "tags": [
                    "Новый мониторинг"
                ],
                "summary": "Выгрузка мониторинга",
                "operationId": "loadMonitoringUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MonitoringExportRequestDto"
                        }
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/notification/telegram": {
            "post": {
                "tags": [
                    "Сервис уведомлений"
                ],
                "summary": "sendNotification",
                "operationId": "sendNotificationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "telegramNotificationData",
                        "description": "telegramNotificationData",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Уведомление в сервис телеграмма"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/pricing-constraints/get": {
            "post": {
                "tags": [
                    "Округление и интервалы для цены"
                ],
                "summary": "Получение ограничений для цены",
                "operationId": "findValuesUsingPOST_12",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PricingConstraintsRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PriceConstrainsResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/pricing-report/find": {
            "get": {
                "tags": [
                    "Как получилась цена"
                ],
                "summary": "Получение цены",
                "operationId": "findExplanationUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "clusterId",
                        "in": "query",
                        "description": "clusterId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "compClusterSegmentId",
                        "in": "query",
                        "description": "compClusterSegmentId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "compNameId",
                        "in": "query",
                        "description": "compNameId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pluCode",
                        "in": "query",
                        "description": "pluCode",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PricingReportDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/reports/download": {
            "post": {
                "tags": [
                    "Работа с отчётами"
                ],
                "summary": "Скачать отчеты",
                "operationId": "downloadReportsUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadReportRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/reports/find": {
            "get": {
                "tags": [
                    "Работа с отчётами"
                ],
                "summary": "Получение списка отчётов",
                "operationId": "findReportsUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "continuationToken",
                        "in": "query",
                        "description": "continuationToken",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "delimiter",
                        "in": "query",
                        "description": "delimiter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxKeys",
                        "in": "query",
                        "description": "maxKeys",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "prefix",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetReportsResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/reports/tokens": {
            "get": {
                "tags": [
                    "Работа с отчётами"
                ],
                "summary": "Получение списка токенов",
                "operationId": "getTokenListUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "delimiter",
                        "in": "query",
                        "description": "delimiter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxKeys",
                        "in": "query",
                        "description": "maxKeys",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "prefix",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/segmentation/available-price-clusters": {
            "get": {
                "tags": [
                    "Сегментация"
                ],
                "summary": "Получение макрорегионов с ценовыми кластерами доступными пользователю",
                "operationId": "getaAvailablePriceClustersUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TerritoryMacroRegions"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/segmentation/calculated-rto": {
            "get": {
                "tags": [
                    "Сегментация"
                ],
                "summary": "Получение расчёта РТО по ценовому кластеру",
                "operationId": "calculatedRtoUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "priceCluster",
                        "in": "query",
                        "description": "Ценовой кластер",
                        "required": true,
                        "type": "string",
                        "x-example": "DNG_PCL_UKH"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FincodeRto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/segmentation/collector/fetch-all": {
            "post": {
                "tags": [
                    "Сегментация"
                ],
                "summary": "Выгрузка таблицы сегментаций",
                "operationId": "fetchAllUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/segmentation/collector/find-all": {
            "post": {
                "tags": [
                    "Сегментация"
                ],
                "summary": "Получение сегментаций с применением коллектора фильтров",
                "operationId": "findAllUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«Сегментация»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/segmentation/collector/values": {
            "post": {
                "tags": [
                    "Сегментация"
                ],
                "summary": "Получение значений сегментаций для коллектора фильтров",
                "operationId": "findValuesUsingPOST_13",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/sort-templates/delete/{id}": {
            "delete": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Удаление шаблона сортировки по идентификатору",
                "operationId": "deleteUsingDELETE_2",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/sort-templates/for-current-user": {
            "get": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Получение списка шаблонов сортировки для текущего пользователя",
                "operationId": "findForCurrentUserUsingGET_1",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateResponseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/sort-templates/save": {
            "post": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Сохранение шаблона сортировки с параметрами",
                "operationId": "saveUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemplateResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/stm/approve": {
            "put": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Согласовать привязку или отвязку линеек аналогов к линейке СТМ",
                "operationId": "approveUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на согласование или отклонение привязки СТМ - аналоги"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/stm/collector/find-all": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Получение СТМ с применением коллектора фильтров",
                "operationId": "findStmUsingPOST_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«Продуктовая линейка СТМ»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/stm/collector/values": {
            "post": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Получение значений СТМ для коллектора фильтров",
                "operationId": "findValuesUsingPOST_14",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/stm/reject": {
            "put": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Отклонить привязку или отвязку линеек аналогов к линейке СТМ",
                "operationId": "rejectUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на согласование или отклонение привязки СТМ - аналоги"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/stm/update": {
            "put": {
                "tags": [
                    "СТМ"
                ],
                "summary": "Обновить зависимость линейки аналога к линейки СТМ",
                "operationId": "updateUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Запрос на изменение зависимости линейки аналога к линейки СТМ"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a118": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а118 от СУЦО",
                "operationId": "saveA118UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA118GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a548": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а548 от СУЦО",
                "operationId": "saveA548UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA548GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a550": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а550 от СУЦО",
                "operationId": "saveA550UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA550GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a563": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а563 от СУЦО",
                "operationId": "saveA563UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA563GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a568": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а568 от СУЦО",
                "operationId": "saveA568UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA568GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-a750": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение данных по а750 от СУЦО",
                "operationId": "saveA750UsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoA750GroupedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/suco/save-prime-costs": {
            "post": {
                "tags": [
                    "СУЦО"
                ],
                "summary": "Получение себестоимости от СУЦО",
                "operationId": "findStmUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataToSave",
                        "description": "dataToSave",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SucoPricesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/table-view-templates/delete/{id}": {
            "delete": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Удаление шаблона вида таблицы по идентификатору",
                "operationId": "deleteUsingDELETE_3",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/table-view-templates/for-current-user": {
            "get": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Получение списка шаблонов вида таблицы для текущего пользователя",
                "operationId": "findForCurrentUserUsingGET_2",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateResponseDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/table-view-templates/save": {
            "post": {
                "tags": [
                    "Шаблоны"
                ],
                "summary": "Сохранение шаблона вида таблицы с параметрами",
                "operationId": "saveUsingPOST_2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TemplateRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TemplateResponseDto"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Получение списка пользователей с пагинацией",
                "operationId": "getUsersUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Номер необходимой страницы (0..N-1). По умолчанию будет возвращена первая страница",
                        "type": "integer",  
                        "required": false
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "description": "Количество пользователей на странице. По умолчанию 50",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Критерий сортировки: property(,asc|desc). По умолчанию сортирует по полю login по возрастанию",
                        "type": "string",                        
                        "required": false
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Page«UserDTO»"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Создание пользователя",
                "operationId": "createUserUsingPUT_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userDTO",
                        "description": "userDTO",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDTOReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/users-info/current": {
            "get": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Получение текущего пользователя",
                "operationId": "getCurrentUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserDTORes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/users/collector/find-all": {
            "post": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Получение пользователей с применением коллектора фильтров",
                "operationId": "findUsersUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "paged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sort.sorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sort.unsorted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "unpaged",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Данные для отображения«UserDTO»"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/users/collector/values": {
            "post": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Получение значений для коллектора фильтров",
                "operationId": "findValuesUsingPOST_15",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "field",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "filters",
                        "description": "filters",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Filter"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        },
        "/api/users/{login}": {
            "get": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Получение пользователя",
                "operationId": "getUserUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "login",
                        "in": "path",
                        "description": "login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UserDTORes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Работа с пользователем"
                ],
                "summary": "Удаление пользователя",
                "operationId": "deleteUserUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "login",
                        "in": "path",
                        "description": "login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "JWT": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "ApplyPriceRequest": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string",
                    "example": "Иванов Иван",
                    "description": "Кем согласовано поднятие рынка"
                },
                "explanationComment": {
                    "type": "string",
                    "example": "Другой сорт/калибр",
                    "description": "Комментарий к причине отклонения"
                },
                "explanationId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1,
                    "description": "ID причины отклонения"
                },
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "kmPrice": {
                    "type": "number",
                    "example": 30.99,
                    "description": "Цена КМ"
                },
                "marketRiseReason": {
                    "type": "string",
                    "example": "Отрицательная маржа",
                    "description": "Причина поднятия рынка"
                }
            },
            "title": "ApplyPriceRequest"
        },
        "BusinessRuleChangeLogDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "string"
                },
                "businessRule": {
                    "type": "string"
                },
                "changeEvent": {
                    "type": "string",
                    "enum": [
                        "ACTIVATE",
                        "ADD_DATA",
                        "APPLY_VARIANT",
                        "DEACTIVATE",
                        "DELETE_DATA",
                        "PARAMETER_CHANGED"
                    ]
                },
                "changerRoles": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "changerUser": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceCluster": {
                    "type": "string"
                },
                "stateChange": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StateChangeDto"
                    }
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "BusinessRuleChangeLogDto"
        },
        "BusinessRuleChangedStatusDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "BusinessRuleChangedStatusDto"
        },
        "BusinessRuleDto": {
            "type": "object",
            "properties": {
                "commentary": {
                    "type": "string"
                },
                "executionOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "BusinessRuleDto"
        },
        "BusinessRuleListResponseDto": {
            "type": "object",
            "properties": {
                "commentary": {
                    "type": "string"
                },
                "executionOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "BusinessRuleListResponseDto"
        },
        "Card": {
            "type": "object",
            "required": [
                "createdBy",
                "name"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdBy": {
                    "$ref": "#/definitions/User"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "Card"
        },
        "CardCreateRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "CardCreateRequest"
        },
        "CardUpdateRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "CardUpdateRequest"
        },
        "CheckMultipleMacroPluLineHasMoscowProductsResponseDto": {
            "type": "object",
            "properties": {
                "hasMoscowProducts": {
                    "type": "boolean"
                },
                "haveOrderPrice": {
                    "type": "boolean"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "ladderStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "macroRegionId": {
                    "type": "string"
                },
                "macroRegionName": {
                    "type": "string"
                },
                "productGroup": {
                    "type": "string"
                }
            },
            "title": "CheckMultipleMacroPluLineHasMoscowProductsResponseDto"
        },
        "CheckPluLineHasMoscowProductsRequestDto": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluLineName": {
                    "type": "string"
                },
                "territoryId": {
                    "type": "string"
                }
            },
            "title": "CheckPluLineHasMoscowProductsRequestDto"
        },
        "CheckPluLineHasMoscowProductsResponseDto": {
            "type": "object",
            "properties": {
                "hasMoscowProducts": {
                    "type": "boolean"
                }
            },
            "title": "CheckPluLineHasMoscowProductsResponseDto"
        },
        "ColumnsDto": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "columnName": {
                    "type": "string"
                },
                "includeInFile": {
                    "type": "boolean"
                }
            },
            "title": "ColumnsDto"
        },
        "CompetitorIndexAddDataRequestDto": {
            "type": "object",
            "required": [
                "basketType",
                "competitorName",
                "priceCluster",
                "ui3Ui4"
            ],
            "properties": {
                "basketType": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "competitorName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ui3Ui4": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompetitorIndexUi3CodeUi3Ui4CodeUi4"
                    }
                }
            },
            "title": "CompetitorIndexAddDataRequestDto"
        },
        "CompetitorIndexCategoryDataGroupedAllDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexCategoryDataGroupedAllDto"
        },
        "CompetitorIndexCategoryDataGroupedByCategoryDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryDataGroupedByCategoryDto"
        },
        "CompetitorIndexCategoryDataGroupedByFinCodeDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryDataGroupedByFinCodeDto"
        },
        "CompetitorIndexCategoryDataGroupedByUi3Dto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryDataGroupedByUi3Dto"
        },
        "CompetitorIndexCategoryMasterSettingGroupedByCategoryDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryMasterSettingGroupedByCategoryDto"
        },
        "CompetitorIndexCategoryMasterSettingGroupedByFinCodeDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryMasterSettingGroupedByFinCodeDto"
        },
        "CompetitorIndexCategoryMasterSettingGroupedByUi3Dto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexCategoryMasterSettingGroupedByUi3Dto"
        },
        "CompetitorIndexChangeDataRequestDto": {
            "type": "object",
            "required": [
                "dataChangeDto",
                "filters"
            ],
            "properties": {
                "dataChangeDto": {
                    "$ref": "#/definitions/CompetitorIndexDataChangeDto"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                }
            },
            "title": "CompetitorIndexChangeDataRequestDto"
        },
        "CompetitorIndexChangeMasterSettingRequestDto": {
            "type": "object",
            "required": [
                "filters",
                "masterSettingChangeDto"
            ],
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                },
                "masterSettingChangeDto": {
                    "$ref": "#/definitions/CompetitorIndexMasterSettingChangeDto"
                }
            },
            "title": "CompetitorIndexChangeMasterSettingRequestDto"
        },
        "CompetitorIndexDataChangeDto": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCompetitorPromoConsidered": {
                    "type": "boolean"
                },
                "isInAllEnvironments": {
                    "type": "boolean"
                },
                "isUpperBound": {
                    "type": "boolean"
                },
                "newCompetitorName": {
                    "type": "string"
                },
                "priceIndex": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexDataChangeDto"
        },
        "CompetitorIndexGeographyDataGroupedAllDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexGeographyDataGroupedAllDto"
        },
        "CompetitorIndexGeographyDataGroupedByMacroRegionDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexGeographyDataGroupedByMacroRegionDto"
        },
        "CompetitorIndexGeographyDataGroupedByTerritoryDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distance": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndex": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexGeographyDataGroupedByTerritoryDto"
        },
        "CompetitorIndexGeographyMasterSettingsGroupedByMacroRegionDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexGeographyMasterSettingsGroupedByMacroRegionDto"
        },
        "CompetitorIndexGeographyMasterSettingsGroupedByTerritoryDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexGeographyMasterSettingsGroupedByTerritoryDto"
        },
        "CompetitorIndexMasterSettingCategoryGroupedAllDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceCluster": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexMasterSettingCategoryGroupedAllDto"
        },
        "CompetitorIndexMasterSettingChangeDto": {
            "type": "object",
            "properties": {
                "distanceLowerBound": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceUpperBound": {
                    "type": "integer",
                    "format": "int32"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "boolean"
                },
                "isDistanceLowerBoundReset": {
                    "type": "boolean"
                },
                "isDistanceUpperBoundReset": {
                    "type": "boolean"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "boolean"
                },
                "isUpperBoundRestricted": {
                    "type": "boolean"
                },
                "priceIndexLowerBound": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceIndexUpperBound": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexMasterSettingChangeDto"
        },
        "CompetitorIndexMasterSettingGeographyGroupedAllDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryRole": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorFormat": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "integer",
                    "format": "int32"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "goodsCategory": {
                    "type": "integer",
                    "format": "int32"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3Code": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "CompetitorIndexMasterSettingGeographyGroupedAllDto"
        },
        "CompetitorIndexMasterSettingHintDto": {
            "type": "object",
            "properties": {
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "indexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexMasterSettingHintDto"
        },
        "CompetitorIndexMasterSettingUngroupedDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "string"
                },
                "categoryRole": {
                    "type": "string"
                },
                "competitorFormat": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "distanceBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsideredRestricted": {
                    "type": "string"
                },
                "isInAllEnvironmentsRestricted": {
                    "type": "string"
                },
                "isUpperBoundRestricted": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceIndexBounds": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexMasterSettingUngroupedDto"
        },
        "CompetitorIndexUi3CodeUi3Ui4CodeUi4": {
            "type": "object",
            "required": [
                "ui3",
                "ui3Code",
                "ui4",
                "ui4Code"
            ],
            "properties": {
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexUi3CodeUi3Ui4CodeUi4"
        },
        "CompetitorIndexUngroupedDto": {
            "type": "object",
            "properties": {
                "basketType": {
                    "type": "string"
                },
                "categoryRole": {
                    "type": "string"
                },
                "competitorFormat": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "distance": {
                    "type": "integer",
                    "format": "int32"
                },
                "finCode": {
                    "type": "string"
                },
                "goodsCategory": {
                    "type": "string"
                },
                "isBaseSegment": {
                    "type": "string"
                },
                "isCompetitorPromoConsidered": {
                    "type": "string"
                },
                "isInAllEnvironments": {
                    "type": "string"
                },
                "isUpperBound": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "string"
                },
                "ui3Code": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CompetitorIndexUngroupedDto"
        },
        "CreateDemandDTO": {
            "type": "object",
            "properties": {
                "extraFeature": {
                    "type": "string"
                },
                "maxVolume": {
                    "type": "number"
                },
                "minVolume": {
                    "type": "number"
                },
                "priceClusters": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Локальная",
                        "Федеральная"
                    ]
                },
                "ui4Code": {
                    "type": "string"
                }
            },
            "title": "CreateDemandDTO"
        },
        "DeclinePriceRequest": {
            "type": "object",
            "properties": {
                "explanationComment": {
                    "type": "string",
                    "example": "Другой сорт/калибр",
                    "description": "Комментарий к причине отклонения"
                },
                "explanationId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1,
                    "description": "ID причины отклонения"
                },
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "DeclinePriceRequest"
        },
        "DeleteDemandDTO": {
            "type": "object",
            "properties": {
                "deletionType": {
                    "type": "string",
                    "enum": [
                        "all",
                        "mr",
                        "pc"
                    ]
                },
                "demandId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "DeleteDemandDTO"
        },
        "DependantPluLinesProductsDto": {
            "type": "object",
            "properties": {
                "pluLineNames": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceLaddersDTO"
                    }
                }
            },
            "title": "DependantPluLinesProductsDto"
        },
        "DictionaryDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "DictionaryDto"
        },
        "DownloadReportRequestDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "report_2022-12-12/report.csv",
                    "description": "Ключ файла в s3"
                }
            },
            "title": "DownloadReportRequestDTO"
        },
        "ExportRequestDto": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColumnsDto"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                }
            },
            "title": "ExportRequestDto"
        },
        "Filter": {
            "type": "object",
            "required": [
                "key",
                "searchCondition"
            ],
            "properties": {
                "inFilter": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "key": {
                    "type": "string"
                },
                "rangeFilter": {
                    "$ref": "#/definitions/RangeDto«object»"
                },
                "searchCondition": {
                    "type": "string",
                    "enum": [
                        "CONTAINS",
                        "EQUALS",
                        "GREATER_THAN_OR_EQ",
                        "LESS_THAN_OR_EQ",
                        "LIKE",
                        "NOT_CONTAINS",
                        "RANGE"
                    ]
                },
                "valueFilter": {
                    "type": "object"
                }
            },
            "title": "Filter"
        },
        "FinCodeDictAssud": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string"
                },
                "fincodeName": {
                    "type": "string"
                }
            },
            "title": "FinCodeDictAssud"
        },
        "Fincode": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 5
                },
                "name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                }
            },
            "title": "Fincode"
        },
        "FincodeDTO": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "FincodeDTO"
        },
        "FincodeDTOReq": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "FincodeDTOReq"
        },
        "FincodeDTORes": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "FincodeDTORes"
        },
        "FincodeRto": {
            "type": "object",
            "properties": {
                "fincode": {
                    "type": "string",
                    "description": "Фин код"
                },
                "fincodeKviPerFincode": {
                    "type": "number",
                    "description": "Соотношение товаров категории  KVI/SKVI по определенному ФК в определенном ЦК по отношению к общему РТО этого ФК в этом ЦК"
                },
                "fincodeKviPerPriceCluster": {
                    "type": "number",
                    "description": "Доля РТО товаров категории KVI/SKVI по ФК в определенном ЦК по отношению к общему РТО этого ЦК"
                },
                "ui3s": {
                    "type": "array",
                    "description": "Массив расчетов рто по ui_3",
                    "items": {
                        "$ref": "#/definitions/Ui3Rto"
                    }
                }
            },
            "title": "FincodeRto"
        },
        "FlatCalculatedPricesResponseDTO": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationPriceFromOld": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceFromSelfCost": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceNewFromCompetitor": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationRecommendPriceFromNew": {
                    "type": "number"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number"
                },
                "frontMargin": {
                    "type": "number"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isEditableStm": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "isStmAnalogs": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "type": "number"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "type": "number"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "type": "integer",
                    "format": "int32"
                },
                "oldPrice": {
                    "type": "number"
                },
                "otherCompetitorPrices": {
                    "type": "string"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceSegment": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "type": "number"
                },
                "selfCost": {
                    "type": "number"
                },
                "sendToApprove": {
                    "type": "boolean"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "totalPrice": {
                    "type": "number"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "FlatCalculatedPricesResponseDTO"
        },
        "FlatCheckingPricesResponseDto": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "coPrice": {
                    "type": "number"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationFinalPriceFromCurrent": {
                    "type": "number"
                },
                "deviationKmPriceFromCompetitor": {
                    "type": "number"
                },
                "deviationKmPriceFromCurrent": {
                    "type": "number"
                },
                "deviationKmPriceFromNew": {
                    "type": "number"
                },
                "deviationPriceFromOld": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceFromSelfCost": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceNewFromCompetitor": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationRecommendPriceFromNew": {
                    "type": "number"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number"
                },
                "frontMargin": {
                    "type": "number"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAcceptKmPrice": {
                    "type": "boolean"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "type": "number"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "type": "integer",
                    "format": "int32"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "type": "integer",
                    "format": "int32"
                },
                "oldPrice": {
                    "type": "number"
                },
                "otherCompetitorPrices": {
                    "type": "string"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "type": "number"
                },
                "selfCost": {
                    "type": "number"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagCo": {
                    "type": "boolean"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "FlatCheckingPricesResponseDto"
        },
        "GetReportsResponseDTO": {
            "type": "object",
            "properties": {
                "commonPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "objectSummaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportDTO"
                    }
                }
            },
            "title": "GetReportsResponseDTO"
        },
        "GroupKeysRequest": {
            "type": "object",
            "properties": {
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "GroupKeysRequest"
        },
        "JobStatusDTO": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "jobName": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ABANDONED",
                        "COMPLETED",
                        "FAILED",
                        "STARTED",
                        "STARTING",
                        "STOPPED",
                        "STOPPING",
                        "UNKNOWN"
                    ]
                }
            },
            "title": "JobStatusDTO"
        },
        "KpiParametersDTO": {
            "type": "object",
            "properties": {
                "overallFactIndex": {
                    "type": "number"
                },
                "overallMargin": {
                    "type": "number"
                }
            },
            "title": "KpiParametersDTO"
        },
        "LadderAttributeInfluencePriceCreateRequestDTO": {
            "type": "object",
            "required": [
                "attributeInfluencePrice"
            ],
            "properties": {
                "attributeInfluencePrice": {
                    "type": "string"
                }
            },
            "title": "LadderAttributeInfluencePriceCreateRequestDTO"
        },
        "LadderBrandCreateRequestDTO": {
            "type": "object",
            "required": [
                "brandName"
            ],
            "properties": {
                "brandName": {
                    "type": "string"
                }
            },
            "title": "LadderBrandCreateRequestDTO"
        },
        "LadderProductGroupCreateRequestDTO": {
            "type": "object",
            "required": [
                "ladderProductGroup"
            ],
            "properties": {
                "ladderProductGroup": {
                    "type": "string"
                }
            },
            "title": "LadderProductGroupCreateRequestDTO"
        },
        "LadderProductTypeCreateRequestDTO": {
            "type": "object",
            "required": [
                "ladderProductType"
            ],
            "properties": {
                "ladderProductType": {
                    "type": "string"
                }
            },
            "title": "LadderProductTypeCreateRequestDTO"
        },
        "LadderTaraCreateRequestDTO": {
            "type": "object",
            "required": [
                "taraName"
            ],
            "properties": {
                "taraName": {
                    "type": "string"
                }
            },
            "title": "LadderTaraCreateRequestDTO"
        },
        "LadderUi4JoinedCreateRequestDTO": {
            "type": "object",
            "required": [
                "ui4JoinedName"
            ],
            "properties": {
                "ui4BoundedCodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "ui4JoinedName": {
                    "type": "string"
                }
            },
            "title": "LadderUi4JoinedCreateRequestDTO"
        },
        "LineOrderPriceRequestDto": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "macroRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pluLineName": {
                    "type": "string"
                },
                "proposedOrderPrice": {
                    "type": "number"
                }
            },
            "title": "LineOrderPriceRequestDto"
        },
        "LineProductGroupRequestDto": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Комментарий"
                },
                "macroRegions": {
                    "type": "array",
                    "description": "Идентификатор макрорегионов",
                    "items": {
                        "type": "string"
                    }
                },
                "pluLineName": {
                    "type": "string",
                    "description": "Продуктовая линейка"
                },
                "proposedProductGroupId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Предложенная группа продукта"
                },
                "ui4Name": {
                    "type": "string",
                    "description": "УИ 4"
                }
            },
            "title": "LineProductGroupRequestDto",
            "description": "Модель запроса для предложения группы продукта продуктовой линейки"
        },
        "LoggerVM": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string",
                    "description": "Текущий уровень логирования"
                },
                "name": {
                    "type": "string",
                    "description": "Имя логгера"
                }
            },
            "title": "LoggerVM",
            "description": "Информация о логгере"
        },
        "LoginVM": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "rememberMe": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50
                }
            },
            "title": "LoginVM"
        },
        "LowerGroupCalculatedPricesDTO": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "competitorPriceIndexed": {
                    "type": "number"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationPriceFromOld": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceFromSelfCost": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceNewFromCompetitor": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationRecommendPriceFromNew": {
                    "type": "number"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "finalPriceType": {
                    "type": "string"
                },
                "frontMargin": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isEditableStm": {
                    "type": "boolean"
                },
                "isFrov": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "isStmAnalogs": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "isTopProductInShortList": {
                    "type": "boolean"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "type": "number"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "lastModifiedByCo": {
                    "type": "string"
                },
                "lastModifiedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "oldSegmentIsEDLP": {
                    "type": "boolean"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceSegment": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "type": "number"
                },
                "selfCost": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "sendToApprove": {
                    "type": "boolean"
                },
                "shopCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "stmAnalogues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StmAnalogueDTO"
                    }
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperGroupId": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "LowerGroupCalculatedPricesDTO"
        },
        "LowerGroupCheckingPricesDTO": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "coPrice": {
                    "type": "number"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "competitorPriceIndexed": {
                    "type": "number"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationFinalPriceFromCurrent": {
                    "type": "number"
                },
                "deviationKmPriceFromCompetitor": {
                    "type": "number"
                },
                "deviationKmPriceFromCurrent": {
                    "type": "number"
                },
                "deviationKmPriceFromNew": {
                    "type": "number"
                },
                "deviationPriceFromOld": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationPriceFromSelfCost": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceNewFromCompetitor": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviationRecommendPriceFromNew": {
                    "type": "number"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "frontMargin": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAcceptKmPrice": {
                    "type": "boolean"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isFrov": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "isTopProductInShortList": {
                    "type": "boolean"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "type": "number"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "lastModifiedByCo": {
                    "type": "string"
                },
                "lastModifiedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "oldSegmentIsEDLP": {
                    "type": "boolean"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "type": "number"
                },
                "selfCost": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "shopCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperGroupId": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagCo": {
                    "type": "boolean"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "LowerGroupCheckingPricesDTO"
        },
        "MacroRegion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isActual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "territory": {
                    "$ref": "#/definitions/Territory"
                }
            },
            "title": "MacroRegion"
        },
        "MacroRegionPriceClusters": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string",
                    "example": "MRDKE",
                    "description": "Макро регион"
                },
                "priceClusters": {
                    "type": "array",
                    "description": "Массив ценовых кластеров с рассчитанным процентом рто по kvi",
                    "items": {
                        "$ref": "#/definitions/PriceClusterRto"
                    }
                }
            },
            "title": "MacroRegionPriceClusters"
        },
        "MonitoringDTO": {
            "type": "object",
            "properties": {
                "algorithmCheckDate": {
                    "type": "string",
                    "format": "date"
                },
                "analogueComp": {
                    "type": "string"
                },
                "approvedPrice": {
                    "type": "integer",
                    "format": "int32"
                },
                "barcodeComp": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "brandComp": {
                    "type": "string"
                },
                "competitorAddress": {
                    "type": "string"
                },
                "competitorPriceToSelfPriceDifference": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorTypeOnDate": {
                    "type": "string"
                },
                "currentPrice": {
                    "type": "number"
                },
                "dateMonitoring": {
                    "type": "string",
                    "format": "date"
                },
                "finCode": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isLastActualPrice": {
                    "type": "boolean"
                },
                "isUploadedToHive": {
                    "type": "boolean"
                },
                "kmCheckDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "macroRegion": {
                    "type": "string"
                },
                "monitoringGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "monitoringType": {
                    "type": "string"
                },
                "nameComp": {
                    "type": "string"
                },
                "nettoComp": {
                    "type": "number"
                },
                "pluCode": {
                    "type": "string"
                },
                "pluLine": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "pluSegmentation": {
                    "type": "string"
                },
                "prediction": {
                    "type": "string"
                },
                "predictionExplanation": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceComp": {
                    "type": "number"
                },
                "priceMedianPromo": {
                    "type": "number"
                },
                "priceMedianRegular": {
                    "type": "number"
                },
                "promoDivisionName": {
                    "type": "string"
                },
                "promoType": {
                    "type": "string"
                },
                "ratioCurrentPriceToCompPrice": {
                    "type": "number"
                },
                "ratioCurrentPriceToMedianCompPrice": {
                    "type": "number"
                },
                "rto": {
                    "type": "number"
                },
                "selfPrice": {
                    "type": "number"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "territory": {
                    "type": "string"
                },
                "ui2Name": {
                    "type": "string"
                },
                "ui3Name": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewed": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "MonitoringDTO"
        },
        "MonitoringExportRequestDto": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColumnsDto"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Filter"
                    }
                },
                "type": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "MonitoringExportRequestDto"
        },
        "MonitoringGroupDTO": {
            "type": "object",
            "properties": {
                "addressCompCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "algorithmCheckDate": {
                    "type": "string",
                    "format": "date"
                },
                "analogueComp": {
                    "type": "string"
                },
                "approvedPrice": {
                    "type": "integer",
                    "format": "int32"
                },
                "barcodeComp": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "brandComp": {
                    "type": "string"
                },
                "competitorAddress": {
                    "type": "string"
                },
                "competitorPriceToSelfPriceDifference": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorTypeOnDate": {
                    "type": "string"
                },
                "currentPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "currentPriceMedian": {
                    "type": "number"
                },
                "dateMonitoring": {
                    "type": "string",
                    "format": "date"
                },
                "finCode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isLastActualPrice": {
                    "type": "boolean"
                },
                "isRecursive": {
                    "type": "boolean"
                },
                "isUploadedToHive": {
                    "type": "boolean"
                },
                "kmCheckDate": {
                    "$ref": "#/definitions/Timestamp"
                },
                "macroRegion": {
                    "type": "string"
                },
                "monitoringDateCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "monitoringDateMax": {
                    "type": "string",
                    "format": "date"
                },
                "monitoringDateMin": {
                    "type": "string",
                    "format": "date"
                },
                "monitoringType": {
                    "type": "string"
                },
                "monitorings": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/MonitoringDTO"
                    }
                },
                "nameComp": {
                    "type": "string"
                },
                "nettoComp": {
                    "type": "number"
                },
                "pluCode": {
                    "type": "string"
                },
                "pluLine": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "pluSegmentation": {
                    "type": "string"
                },
                "prediction": {
                    "type": "string"
                },
                "predictionExplanation": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceComp": {
                    "type": "number"
                },
                "priceCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceMedianPromo": {
                    "type": "number"
                },
                "priceMedianRegular": {
                    "type": "number"
                },
                "promoDivisionName": {
                    "type": "string"
                },
                "promoType": {
                    "type": "string"
                },
                "ratioCurrentPriceToCompPrice": {
                    "type": "number"
                },
                "ratioCurrentPriceToMedianCompPrice": {
                    "type": "number"
                },
                "recursionInfo": {
                    "type": "string"
                },
                "rto": {
                    "type": "number"
                },
                "selfPrice": {
                    "type": "number"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "territory": {
                    "type": "string"
                },
                "ui2Name": {
                    "type": "string"
                },
                "ui3Name": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewed": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "MonitoringGroupDTO"
        },
        "MonitoringUpdateRequest": {
            "type": "object",
            "required": [
                "monitoringGroupId",
                "userDecisionId"
            ],
            "properties": {
                "monitoringGroupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "userDecisionId": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "MonitoringUpdateRequest"
        },
        "OrderPriceLimitAllMacroResponseDto": {
            "type": "object",
            "properties": {
                "ladderBroken": {
                    "type": "boolean"
                },
                "ladderStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "macroRegionId": {
                    "type": "string"
                },
                "macroRegionName": {
                    "type": "string"
                },
                "orderPrice": {
                    "type": "number"
                },
                "priceLimit": {
                    "$ref": "#/definitions/OrderPriceLimitResponseDto"
                }
            },
            "title": "OrderPriceLimitAllMacroResponseDto"
        },
        "OrderPriceLimitRequestDto": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluLineName": {
                    "type": "string"
                },
                "territoryId": {
                    "type": "string"
                }
            },
            "title": "OrderPriceLimitRequestDto"
        },
        "OrderPriceLimitResponseDto": {
            "type": "object",
            "properties": {
                "lowerLimit": {
                    "type": "number"
                },
                "upperLimit": {
                    "type": "number"
                }
            },
            "title": "OrderPriceLimitResponseDto"
        },
        "OrderPriceUpdateViewDto": {
            "type": "object",
            "properties": {
                "pluLineProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PluLineProductDTO"
                    }
                }
            },
            "title": "OrderPriceUpdateViewDto"
        },
        "OtherCompetitorPricesDto": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "string"
                },
                "range": {
                    "$ref": "#/definitions/RangeDto«int»"
                }
            },
            "title": "OtherCompetitorPricesDto"
        },
        "Pageable": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "paged": {
                    "type": "boolean"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "unpaged": {
                    "type": "boolean"
                }
            },
            "title": "Pageable"
        },
        "Page«UserDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserDTORes"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                },
                "totalElements": {
                    "type": "integer",
                    "format": "int64"
                },
                "totalPages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Page«UserDTO»"
        },
        "PluDTOReq": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PluDTOReq"
        },
        "PluDTORes": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PluDTORes"
        },
        "PluDemandDTO": {
            "type": "object",
            "properties": {
                "assortLvl": {
                    "type": "string"
                },
                "availability": {
                    "type": "integer",
                    "format": "int32"
                },
                "demandId": {
                    "type": "integer",
                    "format": "int64"
                },
                "extraFeature": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "kmDepartment": {
                    "type": "string"
                },
                "lastEditTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastEditor": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "maxVolume": {
                    "type": "number"
                },
                "minVolume": {
                    "type": "number"
                },
                "pluCode": {
                    "type": "string"
                },
                "pluLine": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "ui2Name": {
                    "type": "string"
                },
                "ui3Name": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                }
            },
            "title": "PluDemandDTO"
        },
        "PluLineDTO": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "blockingHint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "macroRegionId": {
                    "type": "string"
                },
                "nettoWarningMessage": {
                    "type": "string"
                },
                "orderPrice": {
                    "type": "number"
                },
                "orderPriceProposed": {
                    "type": "number"
                },
                "pluLineName": {
                    "type": "string"
                },
                "selfPriceErrorMessage": {
                    "type": "string"
                },
                "ui4ErrorMessage": {
                    "type": "string"
                }
            },
            "title": "PluLineDTO"
        },
        "PluLineProductDTO": {
            "type": "object",
            "properties": {
                "currentPluLine": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "proposedPluLine": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "title": "PluLineProductDTO"
        },
        "PluLineProductsCountDTO": {
            "type": "object",
            "properties": {
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "PluLineProductsCountDTO"
        },
        "PluLineRequestDTO": {
            "type": "object",
            "required": [
                "macroRegion",
                "pluLineName"
            ],
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluLineName": {
                    "type": "string"
                }
            },
            "title": "PluLineRequestDTO"
        },
        "PriceClusterRto": {
            "type": "object",
            "properties": {
                "priceCluster": {
                    "type": "string",
                    "example": "MRDKE",
                    "description": "Макро регион"
                },
                "priceClusterKviPerPriceCluster": {
                    "type": "number",
                    "description": "Доля РТО KVI в общ. РТО"
                }
            },
            "title": "PriceClusterRto"
        },
        "PriceConstrainsResponseDto": {
            "type": "object",
            "properties": {
                "basketErrorNotification": {
                    "type": "string"
                },
                "maximumDeviationInterval": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "maximumIntervalNotification": {
                    "type": "string"
                },
                "minimumDeviationIntervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RangeDto«bigdecimal»"
                    }
                },
                "minimumIntervalNotifications": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "roundedPrice": {
                    "type": "number"
                }
            },
            "title": "PriceConstrainsResponseDto"
        },
        "PriceLaddersDTO": {
            "type": "object",
            "properties": {
                "applyMonitoring": {
                    "type": "boolean"
                },
                "attributeInfluencePrice": {
                    "type": "string"
                },
                "attributeInfluencePriceProposed": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "brandCustom": {
                    "type": "string"
                },
                "brandProposed": {
                    "type": "string"
                },
                "brandUpdated": {
                    "type": "string"
                },
                "canEdit": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "candidatePluLinePrice": {
                    "type": "number"
                },
                "candidatePluLineProductGroup": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "finCode": {
                    "type": "string"
                },
                "hasFROVKVIProducts": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "isApplyMonitoringFlagAvailable": {
                    "type": "boolean"
                },
                "isApplyMonitoringTranslated": {
                    "type": "boolean"
                },
                "isCustomNettoBroken": {
                    "type": "boolean"
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "isFederalPluLine": {
                    "type": "boolean"
                },
                "isFederalPluUpdated": {
                    "type": "boolean"
                },
                "isLadderBroken": {
                    "type": "boolean"
                },
                "isProductGroupNeedToBeRemoved": {
                    "type": "boolean"
                },
                "isStm": {
                    "type": "boolean"
                },
                "isStmPluLine": {
                    "type": "boolean"
                },
                "isUi4Updated": {
                    "type": "boolean"
                },
                "kmName": {
                    "type": "string"
                },
                "lastChangeDate": {
                    "type": "string"
                },
                "macroRegion": {
                    "type": "string"
                },
                "macroRegionName": {
                    "type": "string"
                },
                "margin": {
                    "type": "integer",
                    "format": "int32"
                },
                "monitoringPrice": {
                    "type": "number"
                },
                "netto": {
                    "type": "number"
                },
                "nettoCustom": {
                    "type": "number"
                },
                "nettoProposed": {
                    "type": "number"
                },
                "nettoUpdated": {
                    "type": "number"
                },
                "orderPrice": {
                    "type": "number"
                },
                "orderPriceMoscow": {
                    "type": "number"
                },
                "pluCode": {
                    "type": "string"
                },
                "pluLineName": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "pluSegmentationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "previousOrderPrice": {
                    "type": "number"
                },
                "priceFor1000Price": {
                    "type": "number"
                },
                "productGroup": {
                    "type": "string"
                },
                "productType": {
                    "type": "string"
                },
                "productTypeProposed": {
                    "type": "string"
                },
                "proposedCurrentPluLinePrice": {
                    "type": "number"
                },
                "proposedCurrentPluLineProductGroup": {
                    "type": "string"
                },
                "proposedPluLineName": {
                    "type": "string"
                },
                "selfPrice": {
                    "type": "number"
                },
                "shelfPrice": {
                    "type": "number"
                },
                "shopsCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "tara": {
                    "type": "string"
                },
                "taraCustom": {
                    "type": "string"
                },
                "taraProposed": {
                    "type": "string"
                },
                "taraUpdated": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "territoryName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "ui4Code": {
                    "type": "string"
                },
                "ui4CustomName": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                },
                "ui4ProposedName": {
                    "type": "string"
                },
                "updateSapDataDate": {
                    "type": "string"
                },
                "verticalPluLineName": {
                    "type": "string"
                }
            },
            "title": "PriceLaddersDTO"
        },
        "PriceLaddersPluLineRequestDTO": {
            "type": "object",
            "required": [
                "attributeInfluencePrice",
                "brand",
                "macroRegion",
                "netto",
                "pluCodes",
                "productType",
                "tara",
                "ui4Code",
                "ui4Name"
            ],
            "properties": {
                "attributeInfluencePrice": {
                    "type": "string"
                },
                "attributeInfluencePriceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "brand": {
                    "type": "string"
                },
                "brandId": {
                    "type": "integer",
                    "format": "int32"
                },
                "macroRegion": {
                    "type": "string"
                },
                "netto": {
                    "type": "number"
                },
                "orderPrice": {
                    "type": "number"
                },
                "pluCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "productGroup": {
                    "type": "string"
                },
                "productGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "productType": {
                    "type": "string"
                },
                "productTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "selfPrices": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "tara": {
                    "type": "string"
                },
                "taraId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "string"
                },
                "ui4HasChanged": {
                    "type": "boolean"
                },
                "ui4Name": {
                    "type": "string"
                }
            },
            "title": "PriceLaddersPluLineRequestDTO"
        },
        "PricePluLinesMacro": {
            "type": "object",
            "properties": {
                "ladderStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Статус"
                },
                "macroRegionId": {
                    "type": "string",
                    "description": "Код макрорегиона"
                },
                "macroRegionName": {
                    "type": "string",
                    "description": "Название макрорегиона"
                },
                "ui4Count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Количество разных УИ4"
                },
                "ui4Joined": {
                    "type": "array",
                    "description": "Список возможных пользовательских УИ4",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/DictionaryDto"
                    }
                }
            },
            "title": "PricePluLinesMacro"
        },
        "PricesForAco": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PricesForAcoItem"
                    }
                }
            },
            "title": "PricesForAco"
        },
        "PricesForAcoItem": {
            "type": "object",
            "required": [
                "calc_date",
                "matnr",
                "vkorg",
                "vtweg",
                "zknn",
                "zkp0",
                "zpur"
            ],
            "properties": {
                "aland": {
                    "type": "string"
                },
                "burks": {
                    "type": "string"
                },
                "calc_date": {
                    "type": "string"
                },
                "eprgr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "knumh_zb20": {
                    "type": "string"
                },
                "knumh_zkp0": {
                    "type": "string"
                },
                "knumh_znc1": {
                    "type": "string"
                },
                "knumh_znc2": {
                    "type": "string"
                },
                "ktokk": {
                    "type": "string"
                },
                "kunnnr": {
                    "type": "string"
                },
                "lifnr": {
                    "type": "string"
                },
                "lv_zpc_brutto": {
                    "type": "number"
                },
                "matkc": {
                    "type": "string"
                },
                "matkl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "norbm": {
                    "type": "number"
                },
                "pltyp": {
                    "type": "string"
                },
                "prsdi": {
                    "type": "string"
                },
                "prsfi": {
                    "type": "string"
                },
                "prsla": {
                    "type": "string"
                },
                "refsite": {
                    "type": "string"
                },
                "reswk": {
                    "type": "string"
                },
                "runrg": {
                    "type": "string"
                },
                "taxk1": {
                    "type": "string"
                },
                "taxm1": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vlgfi": {
                    "type": "string"
                },
                "vrkme": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                },
                "waerk": {
                    "type": "string"
                },
                "waers": {
                    "type": "string"
                },
                "werks": {
                    "type": "string"
                },
                "zaf2": {
                    "type": "number"
                },
                "zaff": {
                    "type": "number"
                },
                "zafs": {
                    "type": "number"
                },
                "zb20": {
                    "type": "number"
                },
                "zb2f": {
                    "type": "number"
                },
                "zknn": {
                    "type": "number"
                },
                "zkp0": {
                    "type": "number"
                },
                "zlin": {
                    "type": "number"
                },
                "znb2": {
                    "type": "number"
                },
                "znc1": {
                    "type": "number"
                },
                "znc2": {
                    "type": "number"
                },
                "znc4": {
                    "type": "number"
                },
                "zpb0": {
                    "type": "string"
                },
                "zpb3": {
                    "type": "string"
                },
                "zpb4": {
                    "type": "string"
                },
                "zpr_netto": {
                    "type": "number"
                },
                "zpur": {
                    "type": "number"
                },
                "zvlgfi": {
                    "type": "string"
                },
                "zwst": {
                    "type": "number"
                },
                "zzrefsite": {
                    "type": "string"
                },
                "zzsupplier": {
                    "type": "string"
                }
            },
            "title": "PricesForAcoItem"
        },
        "PricingConstraintsRequestDto": {
            "type": "object",
            "required": [
                "proposedPrice"
            ],
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "proposedPrice": {
                    "type": "number"
                }
            },
            "title": "PricingConstraintsRequestDto"
        },
        "PricingReportDto": {
            "type": "object",
            "properties": {
                "afterCompressionPrice": {
                    "type": "number"
                },
                "afterLaddersPrice": {
                    "type": "number"
                },
                "afterMarketAlignmentPrice": {
                    "type": "number"
                },
                "afterMonitoringPrice": {
                    "type": "number"
                },
                "averageMarketDeltaPrc": {
                    "type": "number"
                },
                "averageMarketPrice": {
                    "type": "number"
                },
                "basePrice": {
                    "type": "number"
                },
                "beforeRoundingPrice": {
                    "type": "number"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "currentDiffPrice": {
                    "type": "number"
                },
                "currentDiffPricePrc": {
                    "type": "number"
                },
                "currentPrice": {
                    "type": "number"
                },
                "newPrice": {
                    "type": "number"
                },
                "pluLine": {
                    "type": "string"
                },
                "pluName": {
                    "type": "string"
                },
                "segmentName": {
                    "type": "string"
                },
                "ui3Name": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                }
            },
            "title": "PricingReportDto"
        },
        "PricingViewedRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "upperGroupId": {
                    "type": "string"
                }
            },
            "title": "PricingViewedRequest"
        },
        "ProductRestoreValidationResponse": {
            "type": "object",
            "properties": {
                "notification": {
                    "type": "string"
                },
                "ui4Left": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ui4ProposedMacroRegionDto"
                    }
                }
            },
            "title": "ProductRestoreValidationResponse"
        },
        "RangeDto«bigdecimal»": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                }
            },
            "title": "RangeDto«bigdecimal»"
        },
        "RangeDto«int»": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "integer",
                    "format": "int32"
                },
                "min": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "RangeDto«int»"
        },
        "RangeDto«object»": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "object"
                },
                "min": {
                    "type": "object"
                }
            },
            "title": "RangeDto«object»"
        },
        "RegionWithEditableFlag": {
            "type": "object",
            "properties": {
                "isEditable": {
                    "type": "boolean"
                },
                "region": {
                    "$ref": "#/definitions/MacroRegion"
                }
            },
            "title": "RegionWithEditableFlag"
        },
        "RejectChangesDto": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                },
                "selectedProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PluDTOReq"
                    }
                }
            },
            "title": "RejectChangesDto"
        },
        "ReportDTO": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ReportDTO"
        },
        "RestoreDataCheckRequestDTO": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluCodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "title": "RestoreDataCheckRequestDTO"
        },
        "RestoreDataRequestDTO": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "pluCodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "pluLineNames": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "RestoreDataRequestDTO"
        },
        "RoleChangeDto": {
            "type": "object",
            "required": [
                "roleWithData",
                "type",
                "userId"
            ],
            "properties": {
                "roleWithData": {
                    "$ref": "#/definitions/RoleWithData"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "change",
                        "delete"
                    ]
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "RoleChangeDto"
        },
        "RoleDictAssud": {
            "type": "object",
            "properties": {
                "roleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roleName": {
                    "type": "string"
                }
            },
            "title": "RoleDictAssud"
        },
        "RoleModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "RoleModel"
        },
        "RoleWithData": {
            "type": "object",
            "required": [
                "fincodes",
                "roleId",
                "territories",
                "territoryIsEditable"
            ],
            "properties": {
                "fincodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "territories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "territoryIsEditable": {
                    "type": "boolean"
                }
            },
            "title": "RoleWithData"
        },
        "ScreenEnum": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "title": "ScreenEnum"
        },
        "Slice«MonitoringGroupDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MonitoringGroupDTO"
                    }
                },
                "empty": {
                    "type": "boolean"
                },
                "first": {
                    "type": "boolean"
                },
                "last": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfElements": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageable": {
                    "$ref": "#/definitions/Pageable"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "$ref": "#/definitions/Sort"
                }
            },
            "title": "Slice«MonitoringGroupDTO»"
        },
        "Sort": {
            "type": "object",
            "properties": {
                "empty": {
                    "type": "boolean"
                },
                "sorted": {
                    "type": "boolean"
                },
                "unsorted": {
                    "type": "boolean"
                }
            },
            "title": "Sort"
        },
        "StateChangeDto": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "newState": {
                    "type": "object"
                },
                "oldState": {
                    "type": "object"
                }
            },
            "title": "StateChangeDto"
        },
        "StmAnalogueDTO": {
            "type": "object",
            "title": "StmAnalogueDTO"
        },
        "StreamingResponseBody": {
            "type": "object",
            "title": "StreamingResponseBody"
        },
        "SucoA118GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA118List"
                }
            },
            "title": "SucoA118GroupedRequest"
        },
        "SucoA118Item": {
            "type": "object",
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                }
            },
            "title": "SucoA118Item"
        },
        "SucoA118List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA118Item"
                    }
                }
            },
            "title": "SucoA118List"
        },
        "SucoA548GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA548List"
                }
            },
            "title": "SucoA548GroupedRequest"
        },
        "SucoA548Item": {
            "type": "object",
            "required": [
                "batch_id",
                "datab",
                "datbi",
                "kappl",
                "knumh",
                "konh_aktnr",
                "konh_datab",
                "konh_datbi",
                "konh_kotabnr",
                "konh_kschl",
                "konh_kzust",
                "konp_aktnr",
                "konp_gkwrt",
                "konp_kbetr",
                "konp_kmein",
                "konp_kopos",
                "konp_kunnr",
                "konp_kzbzg",
                "konp_lifnr",
                "konp_loevm_ko",
                "konp_mxwrt",
                "konp_rswrt",
                "kschl",
                "matnr",
                "vkorg",
                "vrkme",
                "vtweg",
                "werks"
            ],
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konh_aktnr": {
                    "type": "string"
                },
                "konh_datab": {
                    "type": "string"
                },
                "konh_datbi": {
                    "type": "string"
                },
                "konh_kotabnr": {
                    "type": "integer",
                    "format": "int32"
                },
                "konh_kschl": {
                    "type": "string"
                },
                "konh_kzust": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vrkme": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                },
                "werks": {
                    "type": "string"
                }
            },
            "title": "SucoA548Item"
        },
        "SucoA548List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA548Item"
                    }
                }
            },
            "title": "SucoA548List"
        },
        "SucoA550GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA550List"
                }
            },
            "title": "SucoA550GroupedRequest"
        },
        "SucoA550Item": {
            "type": "object",
            "required": [
                "batch_id",
                "datab",
                "datbi",
                "kappl",
                "knumh",
                "konh_aktnr",
                "konh_datab",
                "konh_datbi",
                "konh_kotabnr",
                "konh_kschl",
                "konh_kzust",
                "konp_aktnr",
                "konp_gkwrt",
                "konp_kbetr",
                "konp_kmein",
                "konp_kopos",
                "konp_kunnr",
                "konp_kzbzg",
                "konp_lifnr",
                "konp_loevm_ko",
                "konp_mxwrt",
                "konp_rswrt",
                "kschl",
                "matnr",
                "vkorg",
                "vrkme",
                "vtweg"
            ],
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konh_aktnr": {
                    "type": "string"
                },
                "konh_datab": {
                    "type": "string"
                },
                "konh_datbi": {
                    "type": "string"
                },
                "konh_kotabnr": {
                    "type": "integer",
                    "format": "int32"
                },
                "konh_kschl": {
                    "type": "string"
                },
                "konh_kzust": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vrkme": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                }
            },
            "title": "SucoA550Item"
        },
        "SucoA550List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA550Item"
                    }
                }
            },
            "title": "SucoA550List"
        },
        "SucoA563GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA563List"
                }
            },
            "title": "SucoA563GroupedRequest"
        },
        "SucoA563Item": {
            "type": "object",
            "required": [
                "batch_id",
                "datab",
                "datbi",
                "kappl",
                "knumh",
                "konp_aktnr",
                "konp_gkwrt",
                "konp_kbetr",
                "konp_kmein",
                "konp_kopos",
                "konp_kunnr",
                "konp_kzbzg",
                "konp_lifnr",
                "konp_loevm_ko",
                "konp_mxwrt",
                "konp_rswrt",
                "kschl",
                "matnr",
                "vkorg",
                "vtweg"
            ],
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                }
            },
            "title": "SucoA563Item"
        },
        "SucoA563List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA563Item"
                    }
                }
            },
            "title": "SucoA563List"
        },
        "SucoA568GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA568List"
                }
            },
            "title": "SucoA568GroupedRequest"
        },
        "SucoA568Item": {
            "type": "object",
            "required": [
                "batch_id",
                "datab",
                "datbi",
                "kappl",
                "knumh",
                "konh_aktnr",
                "konh_datab",
                "konh_datbi",
                "konh_kotabnr",
                "konh_kschl",
                "konh_kzust",
                "konp_aktnr",
                "konp_gkwrt",
                "konp_kbetr",
                "konp_kmein",
                "konp_kopos",
                "konp_kunnr",
                "konp_kzbzg",
                "konp_lifnr",
                "konp_loevm_ko",
                "konp_mxwrt",
                "konp_rswrt",
                "kschl",
                "matnr",
                "vkorg",
                "vrkme",
                "vtweg"
            ],
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konh_aktnr": {
                    "type": "string"
                },
                "konh_datab": {
                    "type": "string"
                },
                "konh_datbi": {
                    "type": "string"
                },
                "konh_kotabnr": {
                    "type": "integer",
                    "format": "int32"
                },
                "konh_kschl": {
                    "type": "string"
                },
                "konh_kzust": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vrkme": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                }
            },
            "title": "SucoA568Item"
        },
        "SucoA568List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA568Item"
                    }
                }
            },
            "title": "SucoA568List"
        },
        "SucoA750GroupedRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/SucoA750List"
                }
            },
            "title": "SucoA750GroupedRequest"
        },
        "SucoA750Item": {
            "type": "object",
            "required": [
                "batch_id",
                "datab",
                "datbi",
                "kappl",
                "knumh",
                "konh_aktnr",
                "konh_datab",
                "konh_datbi",
                "konh_kotabnr",
                "konh_kschl",
                "konh_kzust",
                "konp_aktnr",
                "konp_gkwrt",
                "konp_kbetr",
                "konp_kmein",
                "konp_kopos",
                "konp_kunnr",
                "konp_kzbzg",
                "konp_lifnr",
                "konp_loevm_ko",
                "konp_mxwrt",
                "konp_rswrt",
                "kschl",
                "matnr",
                "vkorg",
                "vrkme",
                "vtweg"
            ],
            "properties": {
                "batch_id": {
                    "type": "string"
                },
                "datab": {
                    "type": "string"
                },
                "datbi": {
                    "type": "string"
                },
                "kappl": {
                    "type": "string"
                },
                "knumh": {
                    "type": "string"
                },
                "konh_aktnr": {
                    "type": "string"
                },
                "konh_datab": {
                    "type": "string"
                },
                "konh_datbi": {
                    "type": "string"
                },
                "konh_kotabnr": {
                    "type": "integer",
                    "format": "int32"
                },
                "konh_kschl": {
                    "type": "string"
                },
                "konh_kzust": {
                    "type": "string"
                },
                "konp_aktnr": {
                    "type": "string"
                },
                "konp_gkwrt": {
                    "type": "number"
                },
                "konp_kbetr": {
                    "type": "number"
                },
                "konp_kmein": {
                    "type": "string"
                },
                "konp_kopos": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_kunnr": {
                    "type": "string"
                },
                "konp_kzbzg": {
                    "type": "string"
                },
                "konp_lifnr": {
                    "type": "string"
                },
                "konp_loevm_ko": {
                    "type": "integer",
                    "format": "int32"
                },
                "konp_mxwrt": {
                    "type": "number"
                },
                "konp_rswrt": {
                    "type": "number"
                },
                "kschl": {
                    "type": "string"
                },
                "matnr": {
                    "type": "string"
                },
                "vkorg": {
                    "type": "string"
                },
                "vrkme": {
                    "type": "string"
                },
                "vtweg": {
                    "type": "string"
                }
            },
            "title": "SucoA750Item"
        },
        "SucoA750List": {
            "type": "object",
            "required": [
                "msg_id",
                "prices_for_aco"
            ],
            "properties": {
                "msg_id": {
                    "type": "string"
                },
                "prices_for_aco": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SucoA750Item"
                    }
                }
            },
            "title": "SucoA750List"
        },
        "SucoPricesRequest": {
            "type": "object",
            "required": [
                "prices_for_aco"
            ],
            "properties": {
                "prices_for_aco": {
                    "$ref": "#/definitions/PricesForAco"
                }
            },
            "title": "SucoPricesRequest"
        },
        "TemplateRequestDto": {
            "type": "object",
            "required": [
                "name",
                "screen"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                },
                "screen": {
                    "$ref": "#/definitions/ScreenEnum"
                }
            },
            "title": "TemplateRequestDto"
        },
        "TemplateResponseDto": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                },
                "screen": {
                    "type": "string"
                }
            },
            "title": "TemplateResponseDto"
        },
        "Territory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isActual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "Territory"
        },
        "TerritoryDictAssud": {
            "type": "object",
            "properties": {
                "isActualTerritory": {
                    "type": "boolean"
                },
                "territoryId": {
                    "type": "string"
                },
                "territoryName": {
                    "type": "string"
                }
            },
            "title": "TerritoryDictAssud"
        },
        "TerritoryMacroRegions": {
            "type": "object",
            "properties": {
                "macroRegions": {
                    "type": "array",
                    "description": "Массив макр-регионов в территории",
                    "items": {
                        "$ref": "#/definitions/MacroRegionPriceClusters"
                    }
                },
                "territory": {
                    "type": "string",
                    "description": "Территория"
                }
            },
            "title": "TerritoryMacroRegions"
        },
        "TestUserDTO": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "userDTO": {
                    "$ref": "#/definitions/UserDTOReq"
                }
            },
            "title": "TestUserDTO"
        },
        "Timestamp": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer",
                    "format": "int32"
                },
                "day": {
                    "type": "integer",
                    "format": "int32"
                },
                "hours": {
                    "type": "integer",
                    "format": "int32"
                },
                "minutes": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "nanos": {
                    "type": "integer",
                    "format": "int32"
                },
                "seconds": {
                    "type": "integer",
                    "format": "int32"
                },
                "time": {
                    "type": "integer",
                    "format": "int64"
                },
                "timezoneOffset": {
                    "type": "integer",
                    "format": "int32"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Timestamp"
        },
        "Ui3Rto": {
            "type": "object",
            "properties": {
                "ui3": {
                    "type": "string",
                    "description": "ui_3"
                },
                "ui3kviPerPriceCluster": {
                    "type": "number",
                    "description": "доля РТО товаров категории  KVI/SKVI по УИ3 в определенном ЦК по отношению к общему РТО этого ЦК"
                },
                "ui3kviPerUi3": {
                    "type": "number",
                    "description": "Соотношение товаров категории  KVI/SKVI по определенному УИ3 определенного ФК в определенном ЦК по отношению к общему РТО этого УИ3 в этом ФК  этого ЦК"
                },
                "ui4s": {
                    "type": "array",
                    "description": "Массив расчетов рто по ui_4",
                    "items": {
                        "$ref": "#/definitions/Ui4Rto"
                    }
                }
            },
            "title": "Ui3Rto"
        },
        "Ui3Ui4DescriptionCodesDto": {
            "type": "object",
            "properties": {
                "ui3Code": {
                    "type": "string"
                },
                "ui3Description": {
                    "type": "string"
                },
                "ui4DescriptionDtos": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/Ui4CodeUi4DescriptionDto"
                    }
                }
            },
            "title": "Ui3Ui4DescriptionCodesDto"
        },
        "Ui4CodeUi4DescriptionDto": {
            "type": "object",
            "properties": {
                "ui4Code": {
                    "type": "string"
                },
                "ui4Description": {
                    "type": "string"
                }
            },
            "title": "Ui4CodeUi4DescriptionDto"
        },
        "Ui4ProposedMacroRegionDto": {
            "type": "object",
            "properties": {
                "macroRegion": {
                    "type": "string"
                },
                "ui4Proposed": {
                    "type": "string"
                }
            },
            "title": "Ui4ProposedMacroRegionDto"
        },
        "Ui4Rto": {
            "type": "object",
            "properties": {
                "ui4": {
                    "type": "string",
                    "description": "ui_4"
                },
                "ui4kviPerPriceCluster": {
                    "type": "number",
                    "description": "Доля РТО товаров категории  KVI/SKVI по УИ4 в определенном ЦК по отношению к общему РТО этого ЦК"
                },
                "ui4kviPerUi4": {
                    "type": "number",
                    "description": "Соотношение товаров категории  KVI/SKVI по определенному УИ4 определенного УИ3 определенного ФК в определенном ЦК по отношению к общему РТО этого УИ4 в этом УИ3 и ФК этого ЦК"
                }
            },
            "title": "Ui4Rto"
        },
        "UpdateProductsRequestDto": {
            "type": "object",
            "required": [
                "attributeInfluencePrice",
                "brand",
                "comments",
                "macroRegions",
                "netto",
                "orderPrice",
                "pluCodes",
                "productType",
                "tara",
                "ui4Code",
                "ui4Name"
            ],
            "properties": {
                "attributeInfluencePrice": {
                    "type": "string"
                },
                "attributeInfluencePriceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "brand": {
                    "type": "string"
                },
                "brandId": {
                    "type": "integer",
                    "format": "int32"
                },
                "comments": {
                    "type": "string"
                },
                "macroRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "netto": {
                    "type": "number"
                },
                "orderPrice": {
                    "type": "number"
                },
                "pluCodes": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "productGroup": {
                    "type": "string"
                },
                "productGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "productType": {
                    "type": "string"
                },
                "productTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tara": {
                    "type": "string"
                },
                "taraId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui4Code": {
                    "type": "string"
                },
                "ui4Name": {
                    "type": "string"
                }
            },
            "title": "UpdateProductsRequestDto"
        },
        "UpperGroupCalculatedPricesDTO": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitiveEnvironmentCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationPriceFromOld": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceFromSelfCost": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceNewFromCompetitor": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationRecommendPriceFromNew": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "environmentClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "finalPriceType": {
                    "type": "string"
                },
                "frontMargin": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isDeclineExplanationCommentDifferent": {
                    "type": "boolean"
                },
                "isDeclineExplanationDifferent": {
                    "type": "boolean"
                },
                "isEditableStm": {
                    "type": "boolean"
                },
                "isIncludeChangedGroups": {
                    "type": "boolean"
                },
                "isLowerLadderDifferent": {
                    "type": "boolean"
                },
                "isMacroDifferent": {
                    "type": "boolean"
                },
                "isPriceReasonToChangeDifferent": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "isStmAnalogs": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "isUpperLadderDifferent": {
                    "type": "boolean"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "lastModifiedByCo": {
                    "type": "string"
                },
                "lastModifiedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "lowerLevelGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LowerGroupCalculatedPricesDTO"
                    }
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "oldSegmentIsEDLP": {
                    "type": "boolean"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceSegment": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "selfCost": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "sendToApprove": {
                    "type": "boolean"
                },
                "shopCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "stmAnalogues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StmAnalogueDTO"
                    }
                },
                "stmType": {
                    "type": "integer",
                    "format": "int32"
                },
                "territory": {
                    "type": "string"
                },
                "territoryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "UpperGroupCalculatedPricesDTO"
        },
        "UpperGroupCheckingPricesDTO": {
            "type": "object",
            "properties": {
                "agreedBy": {
                    "type": "string"
                },
                "basicBasketAttribute": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "categorySegment": {
                    "type": "string"
                },
                "coAccept": {
                    "type": "boolean"
                },
                "coPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "commercialMarginThousandsPerMonth": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitiveEnvironment": {
                    "type": "string"
                },
                "competitiveEnvironmentCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "deviationFinalPriceFromCurrent": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationKmPriceFromCompetitor": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "deviationKmPriceFromCurrent": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "deviationKmPriceFromNew": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "deviationPriceFromOld": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceFromSelfCost": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationPriceNewFromCompetitor": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "deviationRecommendPriceFromNew": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "environmentCluster": {
                    "type": "string"
                },
                "environmentClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "finCode": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number"
                },
                "frontMargin": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "influenceOnPtFm": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAcceptKmPrice": {
                    "type": "boolean"
                },
                "isAccessControl": {
                    "type": "boolean"
                },
                "isDeclineExplanationDifferent": {
                    "type": "boolean"
                },
                "isLowerLadderDifferent": {
                    "type": "boolean"
                },
                "isPriceReasonToChangeDifferent": {
                    "type": "boolean"
                },
                "isPromoPricing": {
                    "type": "boolean"
                },
                "isSinglePriceForPriceCluster": {
                    "type": "boolean"
                },
                "isUpperLadderDifferent": {
                    "type": "boolean"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmAccept": {
                    "type": "boolean"
                },
                "kmPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "ladderBroken": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "lastModifiedByCo": {
                    "type": "string"
                },
                "lastModifiedTimestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "lowerLadder": {
                    "type": "string"
                },
                "lowerLevelGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LowerGroupCheckingPricesDTO"
                    }
                },
                "macroRegion": {
                    "type": "string"
                },
                "marginNegative": {
                    "type": "boolean"
                },
                "marketRiseCreatedTimestamp": {
                    "type": "string",
                    "format": "date"
                },
                "marketRiseDeletedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisePrice": {
                    "type": "number"
                },
                "marketRiseReason": {
                    "type": "string"
                },
                "marketRiseUpdatedTimestamp": {
                    "$ref": "#/definitions/Timestamp"
                },
                "marketRisingStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "newFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldFrontMargin": {
                    "$ref": "#/definitions/RangeDto«int»"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "oldSegmentIsEDLP": {
                    "type": "boolean"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluBasket": {
                    "type": "string"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceClusterCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "priceRange": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "priceRangePercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "productLine": {
                    "type": "string"
                },
                "productTurnoverToItems": {
                    "type": "number"
                },
                "productTurnoverToMonetary": {
                    "type": "number"
                },
                "recommendedPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "selfCost": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "shopCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "territory": {
                    "type": "string"
                },
                "territoryCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string"
                },
                "ui4": {
                    "type": "string"
                },
                "upperLadder": {
                    "type": "string"
                },
                "vendorName": {
                    "type": "string"
                },
                "viewFlagCo": {
                    "type": "boolean"
                },
                "viewFlagKm": {
                    "type": "boolean"
                },
                "violationStrategyCo": {
                    "type": "string"
                }
            },
            "title": "UpperGroupCheckingPricesDTO"
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[\\w]+\\.+[\\w]+@x5.ru$"
                },
                "fincodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/Fincode"
                    }
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isTechUser": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "login": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[_.@A-Za-z0-9-]*$"
                },
                "personnelNumber": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/RegionWithEditableFlag"
                    }
                },
                "roleModelSet": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/RoleModel"
                    }
                }
            },
            "title": "User"
        },
        "UserCreateAssud": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "isActive",
                "lastName",
                "login",
                "personnelNumber"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "personnelNumber": {
                    "type": "string"
                }
            },
            "title": "UserCreateAssud"
        },
        "UserDTO": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "authorities": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "fincodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/FincodeDTO"
                    }
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "login": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[_.@A-Za-z0-9-]*$"
                },
                "regions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/UserMacroRegionDTO"
                    }
                },
                "reportAvailable": {
                    "type": "boolean"
                },
                "techUser": {
                    "type": "boolean"
                }
            },
            "title": "UserDTO"
        },
        "UserDTOReq": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "authorities": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "fincodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/FincodeDTOReq"
                    }
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isReportAvailable": {
                    "type": "boolean"
                },
                "isTechUser": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "login": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[_.@A-Za-z0-9-]*$"
                },
                "regions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/UserMacroRegionDTOReq"
                    }
                },
                "reportAvailable": {
                    "type": "boolean"
                },
                "techUser": {
                    "type": "boolean"
                }
            },
            "title": "UserDTOReq"
        },
        "UserDTORes": {
            "type": "object",
            "required": [
                "login"
            ],
            "properties": {
                "authorities": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int64"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "type": "string"
                },
                "fincodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/FincodeDTORes"
                    }
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 50
                },
                "login": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 50,
                    "pattern": "^[_.@A-Za-z0-9-]*$"
                },
                "regions": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/UserMacroRegionDTORes"
                    }
                },
                "reportAvailable": {
                    "type": "boolean"
                },
                "techUser": {
                    "type": "boolean"
                }
            },
            "title": "UserDTORes"
        },
        "UserMacroRegionDTO": {
            "type": "object",
            "properties": {
                "isEditable": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                }
            },
            "title": "UserMacroRegionDTO"
        },
        "UserMacroRegionDTOReq": {
            "type": "object",
            "properties": {
                "isEditable": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                }
            },
            "title": "UserMacroRegionDTOReq"
        },
        "UserMacroRegionDTORes": {
            "type": "object",
            "properties": {
                "isEditable": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                }
            },
            "title": "UserMacroRegionDTORes"
        },
        "UserModifyAssud": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "isActive",
                "lastName",
                "login",
                "personnelNumber",
                "userId"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "personnelNumber": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "UserModifyAssud"
        },
        "UserWithRole": {
            "type": "object",
            "properties": {
                "editableTerritories": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "fincodes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "noneditableTerritories": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "UserWithRole"
        },
        "UserWithoutRole": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastName": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "personnelNumber": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "UserWithoutRole"
        },
        "Возможные пользовательские УИ4 для продуктов с подсказками": {
            "type": "object",
            "properties": {
                "disableToChangePluLine": {
                    "type": "boolean"
                },
                "hint": {
                    "type": "string",
                    "example": "Для вашей категории отсутствуют пользовательские УИ4.",
                    "description": "Подсказка"
                },
                "ui4Joined": {
                    "type": "array",
                    "description": "Список возможных пользовательских УИ4",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/DictionaryDto"
                    }
                },
                "warningMessage": {
                    "type": "string",
                    "example": "У выбранных товаров отличаются мастер-данные УИ4",
                    "description": "Сообщение предупреждения"
                }
            },
            "title": "Возможные пользовательские УИ4 для продуктов с подсказками"
        },
        "Данные для отображения«BusinessRuleChangeLogDto»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/BusinessRuleChangeLogDto"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«BusinessRuleChangeLogDto»"
        },
        "Данные для отображения«BusinessRuleListResponseDto»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/BusinessRuleListResponseDto"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«BusinessRuleListResponseDto»"
        },
        "Данные для отображения«PluDemandDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/PluDemandDTO"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«PluDemandDTO»"
        },
        "Данные для отображения«PriceLaddersDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/PriceLaddersDTO"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«PriceLaddersDTO»"
        },
        "Данные для отображения«UpperGroupCalculatedPricesDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/UpperGroupCalculatedPricesDTO"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«UpperGroupCalculatedPricesDTO»"
        },
        "Данные для отображения«UpperGroupCheckingPricesDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/UpperGroupCheckingPricesDTO"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«UpperGroupCheckingPricesDTO»"
        },
        "Данные для отображения«UserDTO»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/UserDTORes"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«UserDTO»"
        },
        "Данные для отображения«Линейка аналог СТМ»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/Линейка аналог СТМ"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«Линейка аналог СТМ»"
        },
        "Данные для отображения«Продуктовая линейка СТМ»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/Продуктовая линейка СТМ"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«Продуктовая линейка СТМ»"
        },
        "Данные для отображения«Сегментация»": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "description": "Список объектов для отображения",
                    "items": {
                        "$ref": "#/definitions/Сегментация"
                    }
                },
                "totalSize": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100,
                    "description": "Общее кол-во элементов по текущему запросу"
                }
            },
            "title": "Данные для отображения«Сегментация»"
        },
        "Данные об измененных группах на экране РЦ": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int64",
                    "example": 5,
                    "description": "Кол-во изменнных групп"
                }
            },
            "title": "Данные об измененных группах на экране РЦ"
        },
        "Запрос для получения возможных пользовательских УИ4": {
            "type": "object",
            "properties": {
                "macroRegionId": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "description": "Список данных запроса для получения возможных пользовательских УИ4",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/Описание запроса для получения возможных пользовательских УИ4"
                    }
                },
                "territoryId": {
                    "type": "string"
                }
            },
            "title": "Запрос для получения возможных пользовательских УИ4"
        },
        "Запрос на добавление комментария к аналогу": {
            "type": "object",
            "properties": {
                "analogueId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4321
                },
                "comment": {
                    "type": "string"
                },
                "stmId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                }
            },
            "title": "Запрос на добавление комментария к аналогу"
        },
        "Запрос на изменение зависимости линейки аналога к линейки СТМ": {
            "type": "object",
            "properties": {
                "analogueId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4321
                },
                "isCancelChange": {
                    "type": "boolean",
                    "example": false
                },
                "isConnect": {
                    "type": "boolean",
                    "example": true
                },
                "stmId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                }
            },
            "title": "Запрос на изменение зависимости линейки аналога к линейки СТМ"
        },
        "Запрос на массовую отправку цен": {
            "type": "object",
            "properties": {
                "ignoringIds": {
                    "type": "array",
                    "description": "Идентификаторы верхних групп расчитанных цен, игнорируемые при отправки на согласование",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "Запрос на массовую отправку цен"
        },
        "Запрос на применение цены ЦО": {
            "type": "object",
            "properties": {
                "coPrice": {
                    "type": "number",
                    "example": 30.99,
                    "description": "Цена ЦО"
                },
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "Запрос на применение цены ЦО"
        },
        "Запрос на принятие/отклонение цен": {
            "type": "object",
            "properties": {
                "coAccept": {
                    "type": "boolean",
                    "example": true,
                    "description": "Принятие/отклонение цен"
                },
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "Запрос на принятие/отклонение цен"
        },
        "requestDTO": {
            "type": "object",
            "title": "Запрос на принятие/отклонение цены КМ",
            "properties": {
                "groupKeys": {
                    "type": "array",
                    "description": "Список идентификаторов подгрупп",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "isAcceptKmPrice": {
                    "type": "boolean",
                    "example": true,
                    "description": "Принятие/отклонение цены КМ"
                }
            },
        },
        "Запрос на согласование или отклонение привязки СТМ - аналоги": {
            "type": "object",
            "properties": {
                "analogueIds": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "stmId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1234
                }
            },
            "title": "Запрос на согласование или отклонение привязки СТМ - аналоги"
        },
        "Запрос на сохранение параметров СТМ для УИ 4": {
            "type": "object",
            "properties": {
                "deviationFromVolume": {
                    "type": "integer",
                    "format": "int32",
                    "example": 4,
                    "description": "Отклонение от объема в процентах"
                },
                "deviationFromVolumeForEdlp": {
                    "type": "integer",
                    "format": "int32",
                    "example": 4,
                    "description": "Отклонение от объема для ЕДЛП в процентах"
                },
                "maxDeviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 7,
                    "description": "Максимальное отклоенине от СТМ"
                },
                "minDeviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Минимальное отклоенине от СТМ"
                },
                "ui4Codes": {
                    "type": "array",
                    "example": [
                        "FR0907001",
                        "FR0907003"
                    ],
                    "description": "Список УИ4 для сохранения параметров",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                }
            },
            "title": "Запрос на сохранение параметров СТМ для УИ 4"
        },
        "Запрос на установку пользовательского отклонения от СТМ для аналога": {
            "type": "object",
            "properties": {
                "analogueId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "deviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 11
                },
                "stmId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 123
                },
                "ui4Code": {
                    "type": "string",
                    "example": "FD0606003"
                }
            },
            "title": "Запрос на установку пользовательского отклонения от СТМ для аналога"
        },
        "Измененные группы верхнего уровня экрана РЦ": {
            "type": "object",
            "properties": {
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isDeclineExplanationCommentDifferent": {
                    "type": "boolean"
                },
                "isDeclineExplanationDifferent": {
                    "type": "boolean"
                },
                "isPriceReasonToChangeDifferent": {
                    "type": "boolean"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "lowerLevelGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Измененные подгруппы экрана РЦ"
                    }
                },
                "newPrice": {
                    "type": "number"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceReasonToChange": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "totalPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                }
            },
            "title": "Измененные группы верхнего уровня экрана РЦ"
        },
        "Измененные подгруппы экрана РЦ": {
            "type": "object",
            "properties": {
                "competitorName": {
                    "type": "string"
                },
                "competitorPrice": {
                    "type": "number"
                },
                "competitorPriceIndexed": {
                    "type": "number"
                },
                "declineExplanation": {
                    "type": "string"
                },
                "declineExplanationComment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "integer",
                    "format": "int64"
                },
                "kmPrice": {
                    "type": "number"
                },
                "newPrice": {
                    "type": "number"
                },
                "oldPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "otherCompetitorPrices": {
                    "$ref": "#/definitions/OtherCompetitorPricesDto"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "pluName": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string"
                },
                "priceReasonToChange": {
                    "type": "string"
                },
                "productLine": {
                    "type": "string"
                },
                "shortPriceReasonToChange": {
                    "type": "string"
                },
                "shortPriceReasonToChangeDescription": {
                    "type": "string"
                },
                "totalPrice": {
                    "$ref": "#/definitions/RangeDto«bigdecimal»"
                },
                "upperGroupId": {
                    "type": "string"
                }
            },
            "title": "Измененные подгруппы экрана РЦ"
        },
        "Комментарий к аналогу СТМ": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "example": "Иван Имярек",
                    "description": "Автор комментария"
                },
                "comment": {
                    "type": "string",
                    "example": "Вот это комментарий!",
                    "description": "Собственно комментарий"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-04-21 11:32:22.580983",
                    "description": "Время создания комментария"
                }
            },
            "title": "Комментарий к аналогу СТМ"
        },
        "Линейка аналог СТМ": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "example": "Мой комментарий",
                    "description": "Комментарии",
                    "items": {
                        "$ref": "#/definitions/Комментарий к аналогу СТМ"
                    }
                },
                "deviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 15,
                    "description": "Отклонение аналога от СТМ, %"
                },
                "hintDeviationFromStm": {
                    "type": "string",
                    "example": "Допустимое значение: 7-15%",
                    "description": "Подсказка отклонения аналога от СТМ"
                },
                "isConnected": {
                    "type": "boolean",
                    "example": true,
                    "description": "Флаг привязки линейки аналога к линейки СТМ"
                },
                "lastModifiedBy": {
                    "type": "string",
                    "example": "Иванов Иван",
                    "description": "Имя пользователя внесшего изменения"
                },
                "lastModifiedTimestamp": {
                    "example": "2021-04-21 11:32:22.580983",
                    "description": "Время последнего изменения",
                    "$ref": "#/definitions/Timestamp"
                },
                "macroRegion": {
                    "type": "string",
                    "example": "Москва",
                    "description": "Макро регион продуктовой линейки аналога СТМ"
                },
                "maxDeviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 30,
                    "description": "Максимальное значение отклонение аналога от СТМ, %"
                },
                "medianShelfPrice": {
                    "type": "number",
                    "example": 122.99,
                    "description": "Полочная цена продуктовой линейки аналога СТМ"
                },
                "minDeviationFromStm": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "Минимальное значение отклонение аналога от СТМ, %"
                },
                "netto": {
                    "type": "number",
                    "example": 0.5,
                    "description": "Объем топ товара продуктовой линейки аналога СТМ"
                },
                "pluCode": {
                    "type": "string",
                    "example": 125547,
                    "description": "Код топ товара продуктовой линейки аналога СТМ"
                },
                "pluLineId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 123,
                    "description": "Идентификатор продуктовой линейки аналога СТМ"
                },
                "pluLineName": {
                    "type": "string",
                    "example": "Мармелад|БОН ПАРИ|0.075|флоу-пак||",
                    "description": "Наименование продуктовой линейки аналога СТМ"
                },
                "pluName": {
                    "type": "string",
                    "example": "Салат Дачный вес.",
                    "description": "Наименование топ товара продуктовой линейки аналога СТМ"
                },
                "priceSegment": {
                    "type": "string",
                    "example": "СЦС",
                    "description": "Ценовой сегмент топ товара продуктовой линейки аналога СТМ"
                },
                "shopCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1222,
                    "description": "Количество магазинов продуктовой линейки аналога СТМ"
                },
                "status": {
                    "type": "string",
                    "example": "Новый",
                    "description": "Статус продуктовой линейки аналога СТМ"
                },
                "type": {
                    "type": "string",
                    "example": "Моск.",
                    "description": "Тип продуктовой линейки"
                },
                "ui4Code": {
                    "type": "string",
                    "example": "FD0606003",
                    "description": "УИ 4 код продуктовой линейки аналога СТМ"
                }
            },
            "title": "Линейка аналог СТМ"
        },
        "Описание запроса для получения возможных пользовательских УИ4": {
            "type": "object",
            "properties": {
                "pluCode": {
                    "type": "integer",
                    "format": "int32",
                    "example": 3228,
                    "description": "Код PLU"
                },
                "pluLineName": {
                    "type": "string",
                    "example": "Чай зеленый|GOLD KILI|картон|стик",
                    "description": "Текущая линейка"
                },
                "proposedPluLineName": {
                    "type": "string",
                    "example": "Чай зеленый|GOLD KILI|пакет|стик",
                    "description": "Предложеная линейка"
                },
                "ui4Code": {
                    "type": "string",
                    "example": "FD0226004",
                    "description": "УИ4 код"
                }
            },
            "title": "Описание запроса для получения возможных пользовательских УИ4"
        },
        "Продуктовая линейка СТМ": {
            "type": "object",
            "properties": {
                "analogueCount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2,
                    "description": "Кол-во привязанных аналогово"
                },
                "analogueCountOnApprove": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1,
                    "description": "Кол-во аналогово на согласовании"
                },
                "deviationFromVolume": {
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "description": "Допустимое отклонение от объема аналога, %"
                },
                "finCode": {
                    "type": "string",
                    "example": "S4",
                    "description": "Фин код топ товара продуктовой линейки СТМ"
                },
                "lastModifiedBy": {
                    "type": "string",
                    "example": "Иванов Иван",
                    "description": "Пользователь внесший последние изменения"
                },
                "lastModifiedTimestamp": {
                    "example": "2021-05-17T11:39:58.000+0000",
                    "description": "Время последнего изменения линейки СТМ",
                    "$ref": "#/definitions/Timestamp"
                },
                "macroRegion": {
                    "type": "string",
                    "example": "Урал",
                    "description": "Макро регион продуктовой линейки СТМ"
                },
                "medianShelfPrice": {
                    "type": "number",
                    "example": 122.99,
                    "description": "Полочная цена продуктовой линейки СТМ"
                },
                "netto": {
                    "type": "number",
                    "example": 0.5,
                    "description": "Объем топ товара продуктовой линейки СТМ"
                },
                "pluCode": {
                    "type": "string",
                    "example": 125547,
                    "description": "Код топ товара продуктовой линейки СТМ"
                },
                "pluLineId": {
                    "type": "integer",
                    "format": "int64",
                    "example": 123,
                    "description": "Идентификатор продуктовой линейки СТМ"
                },
                "pluLineName": {
                    "type": "string",
                    "example": "Мармелад|БОН ПАРИ|0.075|флоу-пак||",
                    "description": "Наименование продуктовой линейки СТМ"
                },
                "pluName": {
                    "type": "string",
                    "example": "Салат Дачный вес.",
                    "description": "Наименование топ товара продуктовой линейки СТМ"
                },
                "pluSegment": {
                    "type": "string",
                    "example": "СТМ ВВ",
                    "description": "Корзина топ товара продуктовой линейки СТМ"
                },
                "priceSegment": {
                    "type": "string",
                    "example": "СЦС",
                    "description": "Ценовой сегмент топ товара продуктовой линейки СТМ"
                },
                "status": {
                    "type": "string",
                    "example": "Новый",
                    "description": "Статус продуктовой линейки СТМ"
                },
                "territory": {
                    "type": "string",
                    "description": "Территория продуктовой линейки СТМ"
                },
                "type": {
                    "type": "string",
                    "example": "Моск.",
                    "description": "Тип продуктовой линейки"
                },
                "ui4Code": {
                    "type": "string",
                    "example": "FD0606003",
                    "description": "Код УИ 4 продуктовой линейки СТМ"
                },
                "ui4Name": {
                    "type": "string",
                    "example": "Питьевая вода",
                    "description": "Наименвоние УИ 4 продуктовой линейки СТМ"
                }
            },
            "title": "Продуктовая линейка СТМ"
        },
        "Сегментация": {
            "type": "object",
            "properties": {
                "coefficient": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123,
                    "description": "Коэффициент"
                },
                "controlCategory": {
                    "type": "string",
                    "example": 123,
                    "description": "Идентификатор категории"
                },
                "deviationToKVI": {
                    "type": "boolean"
                },
                "elasticity": {
                    "type": "integer",
                    "format": "int32"
                },
                "finCode": {
                    "type": "string"
                },
                "isInMonitoring": {
                    "type": "boolean",
                    "example": true,
                    "description": "Флаг отслеживания"
                },
                "macroRegion": {
                    "type": "string",
                    "example": 123,
                    "description": "Идентификатор макррегиона"
                },
                "pluCode": {
                    "type": "integer",
                    "format": "int32",
                    "example": 123,
                    "description": "Код продукта"
                },
                "pluLine": {
                    "type": "string",
                    "example": 123,
                    "description": "Продуктовая линия"
                },
                "pluName": {
                    "type": "string",
                    "example": 123,
                    "description": "Имя продукта"
                },
                "pluSegmentationNew": {
                    "type": "string"
                },
                "pluSegmentationOld": {
                    "type": "string"
                },
                "priceCluster": {
                    "type": "string",
                    "example": "ЦК ДСК Пример",
                    "description": "Идентификатор ценового кластера"
                },
                "rtoVolume": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string",
                    "example": "Не KVI",
                    "description": "Идентификатор статуса"
                },
                "territory": {
                    "type": "string",
                    "description": "Территория"
                },
                "toVolume": {
                    "type": "integer",
                    "format": "int32"
                },
                "ui3": {
                    "type": "string",
                    "example": "FD0501000",
                    "description": "Идентификатор ui3"
                },
                "ui4": {
                    "type": "string",
                    "example": "FD0501004",
                    "description": "Идентификатор ui4"
                }
            },
            "title": "Сегментация"
        },
        "Уведомление в сервис телеграмма": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string",
                    "example": 123456,
                    "description": "Идентификатор чата в который будет отправлено уведомление"
                },
                "text": {
                    "type": "string",
                    "example": "test",
                    "description": "Текст уведомления"
                }
            },
            "title": "Уведомление в сервис телеграмма"
        }
    }
}


