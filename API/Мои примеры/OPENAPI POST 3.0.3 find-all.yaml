openapi: 3.0.3
info:
  title: API получения рассчитанных цен
  version: "4.12.1"
  description: Метод получения верхних групп и подгрупп рассчитанных цен с применением коллектора фильтров

paths:
  /api/detailed/collector/find-all:
    post:
      summary: Получение рассчитанных цен
      description: Возвращает иерархическую структуру рассчитанных цен с фильтрацией, пагинацией и сортировкой
      tags:
        - Calculated Prices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Список фильтров
                  items:
                    $ref: '#/components/schemas/Filter'
                offset:
                  type: integer
                  format: int64
                paged:
                  type: boolean
                pageNumber:
                  type: integer
                  format: int32
                pageSize:
                  type: integer
                  format: int32
                sort.sorted:
                  type: boolean
                sort.unsorted:
                  type: boolean
                unpaged:
                  type: boolean
      responses:
        '200':
          description: Успешный ответ со списком рассчитанных цен
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/UpperGroupCalculatedPricesDTO'
                  totalSize:
                    type: integer
                    format: int64
                    example: 100
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

components:
  schemas:
    Filter:
      type: object
      properties:
        key:
          type: string
        searchCondition:
          type: string
          enum: [CONTAINS, EQUALS, GREATER_THAN_OR_EQ, LESS_THAN_OR_EQ, LIKE, NOT_CONTAINS, RANGE]
        inFilter:
          type: array
          items:
            type: object
        rangeFilter:
          type: object
        valueFilter:
          type: object

    RangeDtoBigDecimal:
      type: object
      properties:
        min:
          type: number
        max:
          type: number

    RangeDtoInt:
      type: object
      properties:
        min:
          type: integer
        max:
          type: integer

    Timestamp:
      type: object
      properties:
        date: { type: integer }
        day: { type: integer }
        hours: { type: integer }
        minutes: { type: integer }
        month: { type: integer }
        nanos: { type: integer }
        seconds: { type: integer }
        time: { type: integer }
        timezoneOffset: { type: integer }
        year: { type: integer }

    OtherCompetitorPricesDto:
      type: object
      properties:
        prices: { type: string }
        range:
          $ref: '#/components/schemas/RangeDtoInt'

    StmAnalogueDTO:
      type: object
      properties: {}

    UpperGroupCalculatedPricesDTO:
      type: object
      properties:
        agreedBy: { type: string }
        basicBasketAttribute: { type: string }
        brand: { type: string }
        categorySegment: { type: string }
        coAccept: { type: boolean }
        commercialMarginThousandsPerMonth: { type: integer }
        competitiveEnvironment: { type: string }
        competitiveEnvironmentCount: { type: integer }
        competitorName: { type: string }
        competitorPrice:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        declineExplanation: { type: string }
        declineExplanationComment: { type: string }
        deviationPriceFromOld:
          $ref: '#/components/schemas/RangeDtoInt'
        deviationPriceFromSelfCost:
          $ref: '#/components/schemas/RangeDtoInt'
        deviationPriceNewFromCompetitor:
          $ref: '#/components/schemas/RangeDtoInt'
        deviationRecommendPriceFromNew:
          $ref: '#/components/schemas/RangeDtoInt'
        environmentCluster: { type: string }
        environmentClusterCount: { type: integer }
        finCode: { type: string }
        finalPrice:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        finalPriceType: { type: string }
        frontMargin: { type: number }
        id: { type: string }
        influenceOnPtFm: { type: integer }
        isAccessControl: { type: boolean }
        isDeclineExplanationCommentDifferent: { type: boolean }
        isDeclineExplanationDifferent: { type: boolean }
        isEditableStm: { type: boolean }
        isIncludeChangedGroups: { type: boolean }
        isLowerLadderDifferent: { type: boolean }
        isMacroDifferent: { type: boolean }
        isPriceReasonToChangeDifferent: { type: boolean }
        isPromoPricing: { type: boolean }
        isSinglePriceForPriceCluster: { type: boolean }
        isStmAnalogs: { type: boolean }
        isTop: { type: boolean }
        isUpperLadderDifferent: { type: boolean }
        key: { type: integer, format: int64 }
        kmAccept: { type: boolean }
        kmPrice:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        ladderBroken: { type: boolean }
        lastModifiedBy: { type: string }
        lastModifiedByCo: { type: string }
        lastModifiedTimestamp: { type: string, format: date-time }
        lowerLadder: { type: string }
        lowerLevelGroups:
          type: array
          items:
            type: object
        macroRegion: { type: string }
        marginNegative: { type: boolean }
        marketRiseCreatedTimestamp: { type: string, format: date }
        marketRiseDeletedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        marketRisePrice: { type: number }
        marketRiseReason: { type: string }
        marketRiseUpdatedTimestamp:
          $ref: '#/components/schemas/Timestamp'
        marketRisingStatus: { type: integer }
        newFrontMargin:
          $ref: '#/components/schemas/RangeDtoInt'
        newPrice: { type: number }
        oldFrontMargin:
          $ref: '#/components/schemas/RangeDtoInt'
        oldPrice:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        oldSegmentIsEDLP: { type: boolean }
        otherCompetitorPrices:
          $ref: '#/components/schemas/OtherCompetitorPricesDto'
        pluBasket: { type: string }
        pluCode: { type: integer }
        pluCount: { type: integer }
        pluName: { type: string }
        priceCluster: { type: string }
        priceClusterCount: { type: integer }
        priceRange:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        priceRangePercent: { type: integer }
        priceSegment: { type: string }
        productLine: { type: string }
        productTurnoverToItems: { type: number }
        productTurnoverToMonetary: { type: number }
        recommendedPrice:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        selfCost:
          $ref: '#/components/schemas/RangeDtoBigDecimal'
        sendToApprove: { type: boolean }
        shopCount: { type: integer }
        shortPriceReasonToChange: { type: string }
        shortPriceReasonToChangeDescription: { type: string }
        stmAnalogues:
          type: array
          items:
            $ref: '#/components/schemas/StmAnalogueDTO'
        stmType: { type: integer }
        territory: { type: string }
        territoryCount: { type: integer }
        ui3: { type: string }
        ui4: { type: string }
        upperLadder: { type: string }
        vendorName: { type: string }
        costSourceType:
          type: string
          description: Источник закупочной цены
          enum:
            - "Прайслисты Торг"
            - "Продажи за 7 дней"
            - "Продажи за 60 дней"
            - "Ручная загрузка"
        viewFlagKm: { type: boolean }
        violationStrategyCo: { type: string }